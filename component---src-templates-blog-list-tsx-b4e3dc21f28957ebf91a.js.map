{"version":3,"sources":["webpack:///./src/components/ArticleCard.tsx","webpack:///./src/templates/BlogList.tsx","webpack:///./src/components/Pagination.tsx"],"names":["Style","styled","div","rhythm","ArticalCard","title","tags","slug","date","excerpt","style","boxShadow","to","dangerouslySetInnerHTML","__html","map","value","BlogListTemplate","data","location","pageContext","site","siteMetadata","edges","posts","keywords","node","frontmatter","fields","key","current","currentPage","last","numPages","Button","Link","button","pagePath","n","Pagination","prefix","prevNum","nextNum"],"mappings":"2FAAA,gEA8BA,IAAMA,EAAQC,IAAOC,IAAV,yEAAGD,CAAH,qGAIOE,YAAO,EAAI,GACRA,YAAO,EAAI,IAKjBC,IA1Bf,YAAkE,IAA3CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,QAC9C,OACE,gBAACT,EAAD,KACE,0BACE,gBAAC,OAAD,CAAMU,MAAO,CAAEC,UAAW,QAAUC,GAAE,IAAML,GACzCF,IAGL,6BAAQG,GACR,qBAAGK,wBAAyB,CAAEC,OAAQL,KAEtC,gBAAC,IAAD,CAAUH,KAAMA,EAAKS,KAAI,SAACC,GAAD,MAAY,CAAEA,iB,oCCxB7C,uEAiDeC,UAhCf,YAAkE,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,YAClCf,EAAUa,EAAKG,KAAKC,aAApBjB,MACAkB,EAAUL,EAAKM,MAAfD,MAER,OACE,gBAAC,IAAD,CAAQJ,SAAUA,EAAUd,MAAOA,GACjC,gBAAC,IAAD,CACEA,MAAM,YACNoB,SAAU,CAAC,OAAD,iCAEXF,EAAMR,KAAI,YAAc,IAAXW,EAAW,EAAXA,KACNrB,EAAQqB,EAAKC,YAAYtB,OAASqB,EAAKE,OAAOrB,KAEpD,OACE,gBAAC,IAAD,CACEsB,IAAKH,EAAKE,OAAOrB,KACjBF,MAAOA,EACPE,KAAMmB,EAAKE,OAAOrB,KAClBE,QAASiB,EAAKjB,QACdD,KAAMkB,EAAKC,YAAYnB,KACvBF,KAAMoB,EAAKC,YAAYrB,UAI7B,gBAAC,IAAD,CACEwB,QAASV,EAAYW,aAAe,EACpCC,KAAMZ,EAAYa,UAAY,O,kCC5CtC,oDAWMC,EAASjC,YAAOkC,QAAV,yEAAGlC,CAAH,uDACRmC,KAMEC,EAAW,SAACC,GAAD,OAAsB,IAANA,EAAU,IAAV,SAAyBA,GAsB1D,IAAMtC,EAAQC,IAAOC,IAAV,wEAAGD,CAAH,oLAKLmC,KAYSG,IAjCf,YAA2D,IAArCT,EAAqC,EAArCA,QAASE,EAA4B,EAA5BA,KAA4B,IAAtBQ,cAAsB,MAAb,GAAa,EAEnDC,EAAsB,IAAZX,GAAiBA,EAAU,EACrCY,EAAUZ,IAAYE,GAAQF,EAAU,EAE9C,OAAa,IAATE,EAAmB,KAGrB,gBAAChC,EAAD,KACGyC,GAAW,gBAACP,EAAD,CAAQtB,GAAI4B,EAASH,EAASI,IAAW,MACrD,4BAAOX,GACNY,GAAW,gBAACR,EAAD,CAAQtB,GAAI4B,EAASH,EAASK,IAAW","file":"component---src-templates-blog-list-tsx-b4e3dc21f28957ebf91a.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { rhythm } from '../utils/typography'\nimport { TagChips } from './TagChip'\n\ntype Props = {\n  tags: string[]\n  slug: string\n  title: string\n  date: string\n  excerpt: string\n}\n\nfunction ArticalCard({ title, tags, slug, date, excerpt }: Props) {\n  return (\n    <Style>\n      <h3>\n        <Link style={{ boxShadow: `none` }} to={`/${slug}`}>\n          {title}\n        </Link>\n      </h3>\n      <small>{date}</small>\n      <p dangerouslySetInnerHTML={{ __html: excerpt }} />\n\n      <TagChips tags={tags.map((value) => ({ value }))} />\n    </Style>\n  )\n}\n\nconst Style = styled.div`\n  border-bottom: solid 1px #d5d5d5;\n  padding: 12px 0;\n  h3 {\n    margin-top: ${rhythm(1 / 4)};\n    margin-bottom: ${rhythm(1 / 4)};\n    border: none;\n  }\n`\n\nexport default ArticalCard\n","import { graphql } from 'gatsby'\nimport * as React from 'react'\nimport {\n  BlogListBySlugQuery,\n  BlogListBySlugQueryVariables,\n  SitePageContext,\n} from '../../types/graphql-types.d'\nimport ArticalCard from '../components/ArticleCard'\nimport Layout from '../components/Layout'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/Seo'\n\ntype Props = {\n  data: BlogListBySlugQuery\n  location: Location\n  pageContext: SitePageContext & BlogListBySlugQueryVariables\n}\n\nfunction BlogListTemplate({ data, location, pageContext }: Props) {\n  const { title } = data.site.siteMetadata\n  const { edges } = data.posts\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO\n        title=\"All posts\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      {edges.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n\n        return (\n          <ArticalCard\n            key={node.fields.slug}\n            title={title}\n            slug={node.fields.slug}\n            excerpt={node.excerpt}\n            date={node.frontmatter.date}\n            tags={node.frontmatter.tags}\n          />\n        )\n      })}\n      <Pagination\n        current={pageContext.currentPage || 1}\n        last={pageContext.numPages || 1}\n      />\n    </Layout>\n  )\n}\n\nexport default BlogListTemplate\n\nexport const pageQuery = graphql`\n  query BlogListBySlug($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    posts: allMarkdownRemark(\n      filter: { frontmatter: { status: { ne: \"draft\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { button } from './common'\n\ntype Props = {\n  current: number\n  last: number\n  prefix?: string\n}\n\nconst Button = styled(Link)`\n  ${button}\n  border-radius: 4px;\n  padding: 0 16px;\n  margin: 0 2px;\n`\n\nconst pagePath = (n: number) => (n === 1 ? '/' : `/page/${n}`)\n\ntype ButtonProps = {\n  num: number\n}\n\nfunction Pagination({ current, last, prefix = '' }: Props) {\n  // const nums = range(Math.max(1, current - 2), Math.min(current + 2, last) + 1)\n  const prevNum = current !== 1 && current - 1\n  const nextNum = current !== last && current + 1\n\n  if (last === 1) return null\n\n  return (\n    <Style>\n      {prevNum && <Button to={prefix + pagePath(prevNum)}>{'<<'}</Button>}\n      <span>{current}</span>\n      {nextNum && <Button to={prefix + pagePath(nextNum)}>{'>>'}</Button>}\n    </Style>\n  )\n}\n\nconst Style = styled.div`\n  display: flex;\n  margin-top: 8px;\n  justify-content: flex-end;\n  > span {\n    ${button}\n    border-radius: 4px;\n    margin: 0 2px;\n    color: #937caf;\n    border-color: #937caf;\n    &:hover {\n      color: #937caf;\n      border-color: #937caf;\n    }\n  }\n`\n\nexport default Pagination\n"],"sourceRoot":""}