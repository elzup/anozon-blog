<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[anozon blog all RSS Feed]]></title><description><![CDATA[フロントエンド中心のブログ]]></description><link>https://blog.anozon.me</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 22 Sep 2021 08:48:02 GMT</lastBuildDate><item><title><![CDATA[Gatsby のブログを Zenn に連携する]]></title><description><![CDATA[Zenn に対応する 個人ブログ(Gatsby のブログ)から Zenn にマルチポストする設定をしました。  は Zenn に向けています。 成果物リポジトリ elzup/anozon-blog 週 1 以上書くというペースを心がけて気づいたら 9…]]></description><link>https://blog.anozon.me//gatsby-to-zenn</link><guid isPermaLink="false">https://blog.anozon.me//gatsby-to-zenn</guid><pubDate>Sat, 18 Sep 2021 16:00:00 GMT</pubDate><content:encoded>Zenn に対応する 個人ブログ(Gatsby のブログ)から Zenn にマルチポストする設定をしました。  は Zenn に向けています。 成果物リポジトリ elzup/anozon-blog 週 1 以上書くというペースを心がけて気づいたら 9…</content:encoded></item><item><title><![CDATA[Arrow function で generics にすると HTML タグとして認識されてしまうときの tips]]></title><description><![CDATA[エディタなどによってうまくハイライトされなかったときはこうする。 をにする。]]></description><link>https://blog.anozon.me//arrow-function-generics</link><guid isPermaLink="false">https://blog.anozon.me//arrow-function-generics</guid><pubDate>Thu, 02 Sep 2021 06:00:00 GMT</pubDate><content:encoded>エディタなどによってうまくハイライトされなかったときはこうする。 をにする。</content:encoded></item><item><title><![CDATA[Web カメラを確認できる鏡ツールを作った]]></title><description><![CDATA[Mitelop の 1 ツールとして追加しました。
Widget makeing tool | Mitelop https://elzup-image-storage.s3.amazonaws.com/blog/mitelop-mirror.png…]]></description><link>https://blog.anozon.me//mitelop-mirror</link><guid isPermaLink="false">https://blog.anozon.me//mitelop-mirror</guid><pubDate>Thu, 26 Aug 2021 15:00:00 GMT</pubDate><content:encoded>Mitelop の 1 ツールとして追加しました。
Widget makeing tool | Mitelop https://elzup-image-storage.s3.amazonaws.com/blog/mitelop-mirror.png…</content:encoded></item><item><title><![CDATA[Rust で2進数にしたときの桁数を求める]]></title><description><![CDATA[usize で取得する関数です。 closure 版 fn 版]]></description><link>https://blog.anozon.me//rust-bit-len</link><guid isPermaLink="false">https://blog.anozon.me//rust-bit-len</guid><pubDate>Tue, 24 Aug 2021 10:00:00 GMT</pubDate><content:encoded>usize で取得する関数です。 closure 版 fn 版</content:encoded></item><item><title><![CDATA[Rust で競プロ環境整えたメモ]]></title><description><![CDATA[のおかげで快適に参加できるようになりました。 tanakh/cargo-atcoder: Cargo subcommand for AtCoder…]]></description><link>https://blog.anozon.me//rust-procon-init</link><guid isPermaLink="false">https://blog.anozon.me//rust-procon-init</guid><pubDate>Fri, 20 Aug 2021 22:00:00 GMT</pubDate><content:encoded>のおかげで快適に参加できるようになりました。 tanakh/cargo-atcoder: Cargo subcommand for AtCoder…</content:encoded></item><item><title><![CDATA[iTerm2 でディレクトリによってタブの色を変える]]></title><description><![CDATA[ディレクトリ移動時に自動でタブの色が変わるようにします。 移動時にディレクトリによって別のコマンドを実行する方法と、iTerm のタブ色を変える方法を組み合わせて実現します。 任意のディレクトリ移動時にコマンドを実行する(zsh) | あのぞんブログ iTerm tab…]]></description><link>https://blog.anozon.me//tab-color-by-path</link><guid isPermaLink="false">https://blog.anozon.me//tab-color-by-path</guid><pubDate>Fri, 06 Aug 2021 16:00:00 GMT</pubDate><content:encoded>ディレクトリ移動時に自動でタブの色が変わるようにします。 移動時にディレクトリによって別のコマンドを実行する方法と、iTerm のタブ色を変える方法を組み合わせて実現します。 任意のディレクトリ移動時にコマンドを実行する(zsh) | あのぞんブログ iTerm tab…</content:encoded></item><item><title><![CDATA[任意のディレクトリ移動時にコマンドを実行する(zsh)]]></title><description><![CDATA[移動時に実行するコマンドを登録する 移動後に実行する hook の登録には  の  を使用します。 .zshrc などで以下のように登録をしておきます。 ディレクトリによって変える関数を定義する 最初にマッチした部分だけ実行されます。 応用例として iTerm…]]></description><link>https://blog.anozon.me//chpwd-by-path</link><guid isPermaLink="false">https://blog.anozon.me//chpwd-by-path</guid><pubDate>Fri, 06 Aug 2021 15:00:00 GMT</pubDate><content:encoded>移動時に実行するコマンドを登録する 移動後に実行する hook の登録には  の  を使用します。 .zshrc などで以下のように登録をしておきます。 ディレクトリによって変える関数を定義する 最初にマッチした部分だけ実行されます。 応用例として iTerm…</content:encoded></item><item><title><![CDATA[GitHub Copilot はいい相棒になりそう]]></title><description><![CDATA[7 月から使い始めて 1 ヶ月目で所感を書きます。 ()
主に TypeScript を書いています。 初日から結構好感です。 良い点 コメント書かなくてもよく効く 関数名だけとか, 関数の途中からでもサジェストしてくれる。 エディタの Undo 壊す問題がなさそう (vim…]]></description><link>https://blog.anozon.me//github-copilot-first-experimece</link><guid isPermaLink="false">https://blog.anozon.me//github-copilot-first-experimece</guid><pubDate>Wed, 04 Aug 2021 00:00:00 GMT</pubDate><content:encoded>7 月から使い始めて 1 ヶ月目で所感を書きます。 ()
主に TypeScript を書いています。 初日から結構好感です。 良い点 コメント書かなくてもよく効く 関数名だけとか, 関数の途中からでもサジェストしてくれる。 エディタの Undo 壊す問題がなさそう (vim…</content:encoded></item><item><title><![CDATA[組み合わせ・順列プログラミングそれぞれまとめ nPr nCr nHr nΠr]]></title><description><![CDATA[順列を扱うための情報をまとめました。 4 パターン表 名前 英語 記号 A,B から 2 つ 順列 Permutation nPr  重複順列 Peramutation with replacement nΠr  組合わせ Combination nCr…]]></description><link>https://blog.anozon.me//permutation-programming</link><guid isPermaLink="false">https://blog.anozon.me//permutation-programming</guid><pubDate>Thu, 29 Jul 2021 21:00:00 GMT</pubDate><content:encoded>順列を扱うための情報をまとめました。 4 パターン表 名前 英語 記号 A,B から 2 つ 順列 Permutation nPr  重複順列 Peramutation with replacement nΠr  組合わせ Combination nCr…</content:encoded></item><item><title><![CDATA[MacOS Big Sur と VSCode で C# 開発メモ]]></title><description><![CDATA[VSCode の設定 Plugin は最低限とりあえずこれだけ入れました。
C# - Visual Studio Marketplace 型補完やフォーマットができるようになります。 Cloud Function の開発 最初の関数: .NET  |  Google Cloud…]]></description><link>https://blog.anozon.me//mac-vscode-csharp</link><guid isPermaLink="false">https://blog.anozon.me//mac-vscode-csharp</guid><pubDate>Thu, 29 Jul 2021 11:00:00 GMT</pubDate><content:encoded>VSCode の設定 Plugin は最低限とりあえずこれだけ入れました。
C# - Visual Studio Marketplace 型補完やフォーマットができるようになります。 Cloud Function の開発 最初の関数: .NET  |  Google Cloud…</content:encoded></item><item><title><![CDATA[Terminal の録画ができる asciinema 使ってみた]]></title><description><![CDATA[Terminal に特化した録画ができる asciinema 使ってみました。 asciinema - Record and share your terminal sessions, the right way…]]></description><link>https://blog.anozon.me//asciinema-feels</link><guid isPermaLink="false">https://blog.anozon.me//asciinema-feels</guid><pubDate>Thu, 29 Jul 2021 10:00:00 GMT</pubDate><content:encoded>Terminal に特化した録画ができる asciinema 使ってみました。 asciinema - Record and share your terminal sessions, the right way…</content:encoded></item><item><title><![CDATA[iTerm tab-color メモ]]></title><description><![CDATA[コマンドを作っておく iTerm2 の tab のタイトルと色を動的にいじる - Qiita  コマンドを zshrc などに追加します。 何色かメモ  設定作成とキャッシュ 末尾にコメントで色をメモっておくと補完が効いていい(zsh  の例)]]></description><link>https://blog.anozon.me//iterm2-tab-color</link><guid isPermaLink="false">https://blog.anozon.me//iterm2-tab-color</guid><pubDate>Mon, 19 Jul 2021 10:00:00 GMT</pubDate><content:encoded>コマンドを作っておく iTerm2 の tab のタイトルと色を動的にいじる - Qiita  コマンドを zshrc などに追加します。 何色かメモ  設定作成とキャッシュ 末尾にコメントで色をメモっておくと補完が効いていい(zsh  の例)</content:encoded></item><item><title><![CDATA[(プロジェクト毎に) VS Code の Window に色をつける]]></title><description><![CDATA[VS Code のテーマを変えました。
Cyberpunk 2077 rebuild - Visual Studio Marketplace…]]></description><link>https://blog.anozon.me//vscode-window-color-customize</link><guid isPermaLink="false">https://blog.anozon.me//vscode-window-color-customize</guid><pubDate>Sun, 18 Jul 2021 23:00:00 GMT</pubDate><content:encoded>VS Code のテーマを変えました。
Cyberpunk 2077 rebuild - Visual Studio Marketplace…</content:encoded></item><item><title><![CDATA[React で複数の ref を 1つのコンポーネントにセットする]]></title><description><![CDATA[同じ div に  と  の両方を使いたいとがあった。 しかしどちらも ref を渡さなければいけなかったのでその方法です。 Share ref with multiple ref handlers · Issue #13029 · facebook/react…]]></description><link>https://blog.anozon.me//react-multiple-ref-to-one-component</link><guid isPermaLink="false">https://blog.anozon.me//react-multiple-ref-to-one-component</guid><pubDate>Fri, 09 Jul 2021 17:00:00 GMT</pubDate><content:encoded>同じ div に  と  の両方を使いたいとがあった。 しかしどちらも ref を渡さなければいけなかったのでその方法です。 Share ref with multiple ref handlers · Issue #13029 · facebook/react…</content:encoded></item><item><title><![CDATA[ブラウザ javascript 側で global ip を取得する]]></title><description><![CDATA[CSR (Client side rendering) でユーザの public ip を取得する方法です。 ipify を使う ipify - A Simple Public IP Address API ReactHooks の例 Code: tools/global-ip…]]></description><link>https://blog.anozon.me//csr-get-public-ip</link><guid isPermaLink="false">https://blog.anozon.me//csr-get-public-ip</guid><pubDate>Tue, 06 Jul 2021 16:00:00 GMT</pubDate><content:encoded>CSR (Client side rendering) でユーザの public ip を取得する方法です。 ipify を使う ipify - A Simple Public IP Address API ReactHooks の例 Code: tools/global-ip…</content:encoded></item><item><title><![CDATA[Node.js で家のネットワークかどうかチェックする]]></title><description><![CDATA[家のネットワーク上でだけ実行したいスクリプトがあったので、接続しているかチェックするコードを書きました。 network (npm) を使う tomas/network: The missing network utilities in Node.js. CLI…]]></description><link>https://blog.anozon.me//is-myhome-network</link><guid isPermaLink="false">https://blog.anozon.me//is-myhome-network</guid><pubDate>Mon, 05 Jul 2021 15:00:00 GMT</pubDate><content:encoded>家のネットワーク上でだけ実行したいスクリプトがあったので、接続しているかチェックするコードを書きました。 network (npm) を使う tomas/network: The missing network utilities in Node.js. CLI…</content:encoded></item><item><title><![CDATA[component から props の型を取得する]]></title><description><![CDATA[Storybook で props 型が必要だけど export したくなかったので。 方法 1 方法 2(古い)]]></description><link>https://blog.anozon.me//get-props-type-from-component</link><guid isPermaLink="false">https://blog.anozon.me//get-props-type-from-component</guid><pubDate>Mon, 05 Jul 2021 11:00:00 GMT</pubDate><content:encoded>Storybook で props 型が必要だけど export したくなかったので。 方法 1 方法 2(古い)</content:encoded></item><item><title><![CDATA[fitty を React で使う useFitty hook]]></title><description><![CDATA[はコンテナに合わせてテキストのフォントサイズをフィットしてくれるライブラリです。 rikschennink/fitty: ✨ Makes text fit perfectly それを React で使うための hooks を書いた。 Gist fitty for react…]]></description><link>https://blog.anozon.me//fitty-in-react</link><guid isPermaLink="false">https://blog.anozon.me//fitty-in-react</guid><pubDate>Mon, 14 Jun 2021 18:00:00 GMT</pubDate><content:encoded>はコンテナに合わせてテキストのフォントサイズをフィットしてくれるライブラリです。 rikschennink/fitty: ✨ Makes text fit perfectly それを React で使うための hooks を書いた。 Gist fitty for react…</content:encoded></item><item><title><![CDATA[unix timestamp の桁数が増えるのはいつか]]></title><description><![CDATA[現在の桁数 現在 10 桁から 11 桁になるのは 2286 年 です。() その他  になったのは 2020 年 9 月からで、  になるのは 2023 年 11 月からです。 現上 2 桁が変わるのは 3.17 年周期です。 unix str 1000000000 200…]]></description><link>https://blog.anozon.me//unix-timestamp-digit</link><guid isPermaLink="false">https://blog.anozon.me//unix-timestamp-digit</guid><pubDate>Wed, 02 Jun 2021 13:00:00 GMT</pubDate><content:encoded>現在の桁数 現在 10 桁から 11 桁になるのは 2286 年 です。() その他  になったのは 2020 年 9 月からで、  になるのは 2023 年 11 月からです。 現上 2 桁が変わるのは 3.17 年周期です。 unix str 1000000000 200…</content:encoded></item><item><title><![CDATA[styled-components の keyframes で ts-styled-plugin のエラーが出る]]></title><description><![CDATA[css animation の  や  などのキーワードに対して  のエラーが出たので対処しました。  で animation を扱う場合以下のように書きます。 () この  や  に VS Code…]]></description><link>https://blog.anozon.me//keyframes-ts-styled-plugin</link><guid isPermaLink="false">https://blog.anozon.me//keyframes-ts-styled-plugin</guid><pubDate>Wed, 19 May 2021 18:00:00 GMT</pubDate><content:encoded>css animation の  や  などのキーワードに対して  のエラーが出たので対処しました。  で animation を扱う場合以下のように書きます。 () この  や  に VS Code…</content:encoded></item><item><title><![CDATA[単色パネル表示するだけのツール作った]]></title><description><![CDATA[たまにモニターの焼け付きが気になって、グレイ色の背景のウィンドウを用意して確認することがあります。 そんなときに単色のページ探すがだるいので Web ツール化しました。
真っ黒や真っ白なウィンドウも作ることができます。 ツール Mitelop…]]></description><link>https://blog.anozon.me//maked-color-panel</link><guid isPermaLink="false">https://blog.anozon.me//maked-color-panel</guid><pubDate>Fri, 19 Feb 2021 10:00:00 GMT</pubDate><content:encoded>たまにモニターの焼け付きが気になって、グレイ色の背景のウィンドウを用意して確認することがあります。 そんなときに単色のページ探すがだるいので Web ツール化しました。
真っ黒や真っ白なウィンドウも作ることができます。 ツール Mitelop…</content:encoded></item><item><title><![CDATA[【JavaScript】ズームしたときの座標を求める関数]]></title><description><![CDATA[図の外側四角 () と選択点()と拡大率から 内側の四角()を求める関数です。 コード マンデルブロ集合をズームしてくサンプル コード tools/mandelbulb.tsx at master · elzup/tools Web マンデルブロ集合]]></description><link>https://blog.anozon.me//js-zoom-func</link><guid isPermaLink="false">https://blog.anozon.me//js-zoom-func</guid><pubDate>Sat, 13 Feb 2021 17:00:00 GMT</pubDate><content:encoded>図の外側四角 () と選択点()と拡大率から 内側の四角()を求める関数です。 コード マンデルブロ集合をズームしてくサンプル コード tools/mandelbulb.tsx at master · elzup/tools Web マンデルブロ集合</content:encoded></item><item><title><![CDATA[React で特定の props を固定した特化コンポーネントを定義する]]></title><description><![CDATA[React で特定の props を固定した特化コンポーネントを定義する方法をいくつかまとめました。 DEMO です。
react-set-props - CodeSandbox 以下の  という自作コンポーネントと  というライブラリのコンポーネントを例に使います。 Star…]]></description><link>https://blog.anozon.me//react-set-props</link><guid isPermaLink="false">https://blog.anozon.me//react-set-props</guid><pubDate>Tue, 19 Jan 2021 20:00:00 GMT</pubDate><content:encoded>React で特定の props を固定した特化コンポーネントを定義する方法をいくつかまとめました。 DEMO です。
react-set-props - CodeSandbox 以下の  という自作コンポーネントと  というライブラリのコンポーネントを例に使います。 Star…</content:encoded></item><item><title><![CDATA[jq コマンドで json の特定のフィールドを削る・抽出する]]></title><description><![CDATA[コマンドを使って json 内部特定のフィールドを操作します。  で行えます。 抽出(pick)・削除(omit) ファイル入出力 配列の各要素を操作]]></description><link>https://blog.anozon.me//json-omit-tips</link><guid isPermaLink="false">https://blog.anozon.me//json-omit-tips</guid><pubDate>Fri, 15 Jan 2021 19:00:00 GMT</pubDate><content:encoded>コマンドを使って json 内部特定のフィールドを操作します。  で行えます。 抽出(pick)・削除(omit) ファイル入出力 配列の各要素を操作</content:encoded></item><item><title><![CDATA[ssh 接続先の vim でマウスの選択範囲をコピーする]]></title><description><![CDATA[vim で mouse を off にする iTerm2 の設定]]></description><link>https://blog.anozon.me//ssh-vim-copy</link><guid isPermaLink="false">https://blog.anozon.me//ssh-vim-copy</guid><pubDate>Wed, 13 Jan 2021 13:00:00 GMT</pubDate><content:encoded>vim で mouse を off にする iTerm2 の設定</content:encoded></item><item><title><![CDATA[vim の q マクロを保存して使いまわす]]></title><description><![CDATA[1 度作ったマクロを保存して、 vim を開き直したときも使いまわしたいときの方法。
マクロ  に保存する例で説明します。 .vimrc に保存する q で macro を記録する  → 操作 →  で記録。  に追記する (外部クリップボードにコピーしたりしたいとき)  b…]]></description><link>https://blog.anozon.me//vim-macro-save</link><guid isPermaLink="false">https://blog.anozon.me//vim-macro-save</guid><pubDate>Wed, 13 Jan 2021 13:00:00 GMT</pubDate><content:encoded>1 度作ったマクロを保存して、 vim を開き直したときも使いまわしたいときの方法。
マクロ  に保存する例で説明します。 .vimrc に保存する q で macro を記録する  → 操作 →  で記録。  に追記する (外部クリップボードにコピーしたりしたいとき)  b…</content:encoded></item><item><title><![CDATA[node.js で Streaming の メタデータを取得する]]></title><description><![CDATA[この記事では node.js で Streaming の メタデータを取得する方法について紹介します。  を使用します。 TooTallNate/node-icy: Node.js module for parsing and/or injecting ICY metadata…]]></description><link>https://blog.anozon.me//node-get-icy</link><guid isPermaLink="false">https://blog.anozon.me//node-get-icy</guid><pubDate>Tue, 12 Jan 2021 14:00:00 GMT</pubDate><content:encoded>この記事では node.js で Streaming の メタデータを取得する方法について紹介します。  を使用します。 TooTallNate/node-icy: Node.js module for parsing and/or injecting ICY metadata…</content:encoded></item><item><title><![CDATA[Raspberry Pi に Node.js セットアップ]]></title><description><![CDATA[Raspberry Pi に Node.js 入れる方法のメモです。 tj/n: Node version management を使います。 .profile の設定 インストール作業]]></description><link>https://blog.anozon.me//raspberry-pi-node-setup</link><guid isPermaLink="false">https://blog.anozon.me//raspberry-pi-node-setup</guid><pubDate>Thu, 07 Jan 2021 21:00:00 GMT</pubDate><content:encoded>Raspberry Pi に Node.js 入れる方法のメモです。 tj/n: Node version management を使います。 .profile の設定 インストール作業</content:encoded></item><item><title><![CDATA[1px の画像データURLメモ]]></title><description><![CDATA[1px 画像 の データ URL を並べておきます。 黒   白   透明   ついでジェネレーターアプリ化しておいたのでどうぞ。 1px data url generator]]></description><link>https://blog.anozon.me//1px-data-url</link><guid isPermaLink="false">https://blog.anozon.me//1px-data-url</guid><pubDate>Wed, 06 Jan 2021 18:00:00 GMT</pubDate><content:encoded>1px 画像 の データ URL を並べておきます。 黒   白   透明   ついでジェネレーターアプリ化しておいたのでどうぞ。 1px data url generator</content:encoded></item><item><title><![CDATA[アロー関数とfunction それぞれの Type Guard 書き方]]></title><description><![CDATA[この記事では アロー関数で Type Guard について紹介します。 TypeScript: TS Playground - An online editor for exploring TypeScript and JavaScript function パターン arrow…]]></description><link>https://blog.anozon.me//type-guard-arrow-function</link><guid isPermaLink="false">https://blog.anozon.me//type-guard-arrow-function</guid><pubDate>Mon, 04 Jan 2021 23:00:00 GMT</pubDate><content:encoded>この記事では アロー関数で Type Guard について紹介します。 TypeScript: TS Playground - An online editor for exploring TypeScript and JavaScript function パターン arrow…</content:encoded></item><item><title><![CDATA[React で URL props が変わったら fade アニメーションで 背景を変える]]></title><description><![CDATA[props で指定された URL が変わったら フェードアウト し、 新しい URL 画像で フェードイン しながら表示するコンポーネントを作りました。
 を使います。 デモ コード  部分の説明。 変更された際  になり Exit アニメーション(fade out…]]></description><link>https://blog.anozon.me//react-transition-props-bg</link><guid isPermaLink="false">https://blog.anozon.me//react-transition-props-bg</guid><pubDate>Tue, 29 Dec 2020 16:00:00 GMT</pubDate><content:encoded>props で指定された URL が変わったら フェードアウト し、 新しい URL 画像で フェードイン しながら表示するコンポーネントを作りました。
 を使います。 デモ コード  部分の説明。 変更された際  になり Exit アニメーション(fade out…</content:encoded></item><item><title><![CDATA[間違えて一緒にコミットしちゃった新規ファイルだけコミットを取り消す]]></title><description><![CDATA[例  を間違えてコミットに含めてしまいました。]]></description><link>https://blog.anozon.me//undo-commited-new-file</link><guid isPermaLink="false">https://blog.anozon.me//undo-commited-new-file</guid><pubDate>Mon, 28 Dec 2020 10:00:00 GMT</pubDate><content:encoded>例  を間違えてコミットに含めてしまいました。</content:encoded></item><item><title><![CDATA[js で先頭以外(n行目以降)をソートする]]></title><description><![CDATA[js で配列の 2 行目以降のみをソートする方法のメモです。 repl: https://repl.it/@anozon/sortbody#index.ts ソート対象の配列 先頭以外をソートする n 行目以降のみソートする Lodash…]]></description><link>https://blog.anozon.me//sort-without-head</link><guid isPermaLink="false">https://blog.anozon.me//sort-without-head</guid><pubDate>Thu, 17 Dec 2020 11:00:00 GMT</pubDate><content:encoded>js で配列の 2 行目以降のみをソートする方法のメモです。 repl: https://repl.it/@anozon/sortbody#index.ts ソート対象の配列 先頭以外をソートする n 行目以降のみソートする Lodash…</content:encoded></item><item><title><![CDATA[java で標準出力を文字列として取得する]]></title><description><![CDATA[以前書いた、
java で標準出力を一旦オフにする | あのぞんブログ から発展して出力の受け取り方です。 Repl.it - StdOutToStr コード]]></description><link>https://blog.anozon.me//java-stdout-mock</link><guid isPermaLink="false">https://blog.anozon.me//java-stdout-mock</guid><pubDate>Fri, 20 Nov 2020 17:00:00 GMT</pubDate><content:encoded>以前書いた、
java で標準出力を一旦オフにする | あのぞんブログ から発展して出力の受け取り方です。 Repl.it - StdOutToStr コード</content:encoded></item><item><title><![CDATA[Next.js export 実行時のタイムスタンプをコンポーネントで使う]]></title><description><![CDATA[を実行した時のタイムスタンプをレンダリングしたいときの方法です。 jsx 上で  などとするとクライアントサイドでレンダリングされた時間が表示されてしまいます。 SSR 時のデータを React で使いたい場合は NextPage…]]></description><link>https://blog.anozon.me//next-initial-props-timestmap</link><guid isPermaLink="false">https://blog.anozon.me//next-initial-props-timestmap</guid><pubDate>Tue, 17 Nov 2020 14:00:00 GMT</pubDate><content:encoded>を実行した時のタイムスタンプをレンダリングしたいときの方法です。 jsx 上で  などとするとクライアントサイドでレンダリングされた時間が表示されてしまいます。 SSR 時のデータを React で使いたい場合は NextPage…</content:encoded></item><item><title><![CDATA[java で標準出力を一旦オフにする]]></title><description><![CDATA[java で標準出力を一時的にオフにする方法です。 Repl.it - StdOutToNull コード  で “デフォルトの出力” と “何もしない OutputStream” を切り替えています。 snippet Snippet 部分のみコード。]]></description><link>https://blog.anozon.me//java-stdout-null</link><guid isPermaLink="false">https://blog.anozon.me//java-stdout-null</guid><pubDate>Wed, 04 Nov 2020 11:00:00 GMT</pubDate><content:encoded>java で標準出力を一時的にオフにする方法です。 Repl.it - StdOutToNull コード  で “デフォルトの出力” と “何もしない OutputStream” を切り替えています。 snippet Snippet 部分のみコード。</content:encoded></item><item><title><![CDATA[Buffer と float、整数、他エンコードとの相互変換【Javascript】]]></title><description><![CDATA[JavaScript で Buffer と他の型への変換する方法をまとめました。 repl も公開しています。
Repl.it - buffer 数値 → Buffer 数値は → 型付き配列 → Buffer という順に変換する。 Buffer…]]></description><link>https://blog.anozon.me//js-float-base64</link><guid isPermaLink="false">https://blog.anozon.me//js-float-base64</guid><pubDate>Sun, 01 Nov 2020 17:00:00 GMT</pubDate><content:encoded>JavaScript で Buffer と他の型への変換する方法をまとめました。 repl も公開しています。
Repl.it - buffer 数値 → Buffer 数値は → 型付き配列 → Buffer という順に変換する。 Buffer…</content:encoded></item><item><title><![CDATA[vim の visual mode で選択した範囲に paste できないとき]]></title><description><![CDATA[恐らく visual mode で選択した範囲がコピーされています。 clipboard に  が設定されているときの挙動です。 設定]]></description><link>https://blog.anozon.me//vim-cannot-paste</link><guid isPermaLink="false">https://blog.anozon.me//vim-cannot-paste</guid><pubDate>Fri, 30 Oct 2020 13:00:00 GMT</pubDate><content:encoded>恐らく visual mode で選択した範囲がコピーされています。 clipboard に  が設定されているときの挙動です。 設定</content:encoded></item><item><title><![CDATA[React と display grid でメモリ付き定規]]></title><description><![CDATA[メモリ付きの定規、ルーラーコンポーネントのサンプルです。 react-memory-component コード ruler-with-memory - CodeSandbox ミソ ブロック部分とメモリ部分を 0.…]]></description><link>https://blog.anozon.me//react-memory-ruler</link><guid isPermaLink="false">https://blog.anozon.me//react-memory-ruler</guid><pubDate>Fri, 30 Oct 2020 12:00:00 GMT</pubDate><content:encoded>メモリ付きの定規、ルーラーコンポーネントのサンプルです。 react-memory-component コード ruler-with-memory - CodeSandbox ミソ ブロック部分とメモリ部分を 0.…</content:encoded></item><item><title><![CDATA[ngrok で http リクエストの中身を全部確認する【IoTデバッグ】]]></title><description><![CDATA[「自前の API にリクエストは届いてるけどなにか不具合が起きている」「リクエストをダンプする環境をすぐに用意するのはダルい」とき用。
ngrok の本来の使い方とは違いますが、http パケットキャプチャができます。 ngrok とは ngrok - secure…]]></description><link>https://blog.anozon.me//ngrok-http-capture</link><guid isPermaLink="false">https://blog.anozon.me//ngrok-http-capture</guid><pubDate>Tue, 13 Oct 2020 10:00:00 GMT</pubDate><content:encoded>「自前の API にリクエストは届いてるけどなにか不具合が起きている」「リクエストをダンプする環境をすぐに用意するのはダルい」とき用。
ngrok の本来の使い方とは違いますが、http パケットキャプチャができます。 ngrok とは ngrok - secure…</content:encoded></item><item><title><![CDATA[js で文字列の先頭のn 行を削除する]]></title><description><![CDATA[コード 1  を使う方法です。 コード 2 コード 1 でいいですが最初に思いついた正規表現で削る方法です。
動作が早いかわからないですが (渡される n が行数より大きいときに使えません。)
遅かったです。Repl.it - regex-vs-slice]]></description><link>https://blog.anozon.me//js-remove-head-line</link><guid isPermaLink="false">https://blog.anozon.me//js-remove-head-line</guid><pubDate>Mon, 05 Oct 2020 18:00:00 GMT</pubDate><content:encoded>コード 1  を使う方法です。 コード 2 コード 1 でいいですが最初に思いついた正規表現で削る方法です。
動作が早いかわからないですが (渡される n が行数より大きいときに使えません。)
遅かったです。Repl.it - regex-vs-slice</content:encoded></item><item><title><![CDATA[絵文字を含めて文字数カウントするWebアプリ作った]]></title><description><![CDATA[アプリ 文字頻度カウント(絵文字対応)
emoji-count 絵文字対応  では絵文字が 1 文字として分割できません。  を使います。 bestiejs/punycode.js: A robust Punycode converter that fully complies…]]></description><link>https://blog.anozon.me//emoji-moji-count</link><guid isPermaLink="false">https://blog.anozon.me//emoji-moji-count</guid><pubDate>Fri, 02 Oct 2020 19:00:00 GMT</pubDate><content:encoded>アプリ 文字頻度カウント(絵文字対応)
emoji-count 絵文字対応  では絵文字が 1 文字として分割できません。  を使います。 bestiejs/punycode.js: A robust Punycode converter that fully complies…</content:encoded></item><item><title><![CDATA[Python で Array.find]]></title><description><![CDATA[配列の中で条件に該当する１つ目を取り出す関数。
なければ None を返す。]]></description><link>https://blog.anozon.me//python-find-arr-func</link><guid isPermaLink="false">https://blog.anozon.me//python-find-arr-func</guid><pubDate>Wed, 16 Sep 2020 11:00:00 GMT</pubDate><content:encoded>配列の中で条件に該当する１つ目を取り出す関数。
なければ None を返す。</content:encoded></item><item><title><![CDATA[Python で TypeScript の UnionType を使う]]></title><description><![CDATA[TypeScript の UnionType は以下のように定義できます。 Python の type でも同じようなことができるのか調べました。
ちなみに  というのがありますが別です。 typeing.Literal を使う ちなみに get_args…]]></description><link>https://blog.anozon.me//python-typing-literal</link><guid isPermaLink="false">https://blog.anozon.me//python-typing-literal</guid><pubDate>Mon, 24 Aug 2020 15:00:00 GMT</pubDate><content:encoded>TypeScript の UnionType は以下のように定義できます。 Python の type でも同じようなことができるのか調べました。
ちなみに  というのがありますが別です。 typeing.Literal を使う ちなみに get_args…</content:encoded></item><item><title><![CDATA[JavaScript で Object の更新はどれが速いのか]]></title><description><![CDATA[スプレッド構文で書くのが面倒だったので検証しました。 結果 結論としてはクローンが書きやすいし速いので良さそうでした。  コスト 書きやすさ スプレッド構文 221 ms △ スプレッド構文でクローンして代入 195 ms ○ Object.assign…]]></description><link>https://blog.anozon.me//javascript-object-update</link><guid isPermaLink="false">https://blog.anozon.me//javascript-object-update</guid><pubDate>Sun, 23 Aug 2020 10:00:00 GMT</pubDate><content:encoded>スプレッド構文で書くのが面倒だったので検証しました。 結果 結論としてはクローンが書きやすいし速いので良さそうでした。  コスト 書きやすさ スプレッド構文 221 ms △ スプレッド構文でクローンして代入 195 ms ○ Object.assign…</content:encoded></item><item><title><![CDATA[js の trim で前後の改行のみ取り除く(空白は保持する)]]></title><description><![CDATA[複数行テキストの trim で行頭の空白を消されたくない時があったので、前後の改行のみ消す方法を紹介します。 方法 コード サンプル Repl.it - trim-only 動作]]></description><link>https://blog.anozon.me//trim-only-newline</link><guid isPermaLink="false">https://blog.anozon.me//trim-only-newline</guid><pubDate>Mon, 17 Aug 2020 17:00:00 GMT</pubDate><content:encoded>複数行テキストの trim で行頭の空白を消されたくない時があったので、前後の改行のみ消す方法を紹介します。 方法 コード サンプル Repl.it - trim-only 動作</content:encoded></item><item><title><![CDATA[Python で Systemd や nohup を使っていてログがリアルタイムに出力されないとき]]></title><description><![CDATA[Python スクリプトでリアルタイムにログが出力されないときの対処法。 -u オプションで起動する -u オプション | 1. コマンドラインと環境 — Python 3.8.5 ドキュメント 端末以外からの実行だとバッファして stdout…]]></description><link>https://blog.anozon.me//python-buffer-print</link><guid isPermaLink="false">https://blog.anozon.me//python-buffer-print</guid><pubDate>Sun, 16 Aug 2020 19:00:00 GMT</pubDate><content:encoded>Python スクリプトでリアルタイムにログが出力されないときの対処法。 -u オプションで起動する -u オプション | 1. コマンドラインと環境 — Python 3.8.5 ドキュメント 端末以外からの実行だとバッファして stdout…</content:encoded></item><item><title><![CDATA[Python で 2つの Iterable をマージしてループする]]></title><description><![CDATA[巨大なソート済み csv ファイルをソートしながらマージする事があったので。
2 つの Iterable な list をロジカルにループする方法を残しておきます。 コード 1 Repl.it - yield-merge-loop…]]></description><link>https://blog.anozon.me//python-iterble-merge</link><guid isPermaLink="false">https://blog.anozon.me//python-iterble-merge</guid><pubDate>Tue, 11 Aug 2020 18:00:00 GMT</pubDate><content:encoded>巨大なソート済み csv ファイルをソートしながらマージする事があったので。
2 つの Iterable な list をロジカルにループする方法を残しておきます。 コード 1 Repl.it - yield-merge-loop…</content:encoded></item><item><title><![CDATA[Google検索で英語のページのみヒットさせる方法]]></title><description><![CDATA[日本語設定で Google 検索を使ってると「日本語のページのみ表示する」というオプションがでてくることがあります。 でも逆に英語のページのみヒットさせたいときもあるので手順を紹介します。(意味合いが違う日本語記事ばかりヒットするときがある) 方法 Private Window…]]></description><link>https://blog.anozon.me//google-search-without-japanese</link><guid isPermaLink="false">https://blog.anozon.me//google-search-without-japanese</guid><pubDate>Wed, 29 Jul 2020 17:00:00 GMT</pubDate><content:encoded>日本語設定で Google 検索を使ってると「日本語のページのみ表示する」というオプションがでてくることがあります。 でも逆に英語のページのみヒットさせたいときもあるので手順を紹介します。(意味合いが違う日本語記事ばかりヒットするときがある) 方法 Private Window…</content:encoded></item><item><title><![CDATA[GitHub Profile README に Shields.io Badge並べた]]></title><description><![CDATA[elzup (elzup)
 shields.io を使って技術系アイコンを量産した - Qiita を参考に Badge を作りました。 Shields.io の logo 機能 Shields.io: Quality metadata badges for open…]]></description><link>https://blog.anozon.me//github-profile-shields</link><guid isPermaLink="false">https://blog.anozon.me//github-profile-shields</guid><pubDate>Tue, 28 Jul 2020 13:00:00 GMT</pubDate><content:encoded>elzup (elzup)
 shields.io を使って技術系アイコンを量産した - Qiita を参考に Badge を作りました。 Shields.io の logo 機能 Shields.io: Quality metadata badges for open…</content:encoded></item><item><title><![CDATA[Firebase Project の複製や ID 変更]]></title><description><![CDATA[やること プロジェクトの複製には、 移行先プロジェクト作成 ソースコードの ID 変更 移行元を Blaze Plan にする(なってない場合) Firestore のデータ移行 が必要になります。
Firestore…]]></description><link>https://blog.anozon.me//firebase-project-change-name</link><guid isPermaLink="false">https://blog.anozon.me//firebase-project-change-name</guid><pubDate>Sun, 26 Jul 2020 22:00:00 GMT</pubDate><content:encoded>やること プロジェクトの複製には、 移行先プロジェクト作成 ソースコードの ID 変更 移行元を Blaze Plan にする(なってない場合) Firestore のデータ移行 が必要になります。
Firestore…</content:encoded></item><item><title><![CDATA[Markdown でコードブロックの中にバックスラッシュ3つを書く]]></title><description><![CDATA[Markdown の複数行コードブロックは普通以下のように書きます。 その中にを書くときは  を使います。 ※この記事はマークダウンで書いているので更に  で囲っています。（コード elzup/anozonbiyori@a7d62e…]]></description><link>https://blog.anozon.me//markdown-escape-backquote</link><guid isPermaLink="false">https://blog.anozon.me//markdown-escape-backquote</guid><pubDate>Mon, 06 Jul 2020 12:00:00 GMT</pubDate><content:encoded>Markdown の複数行コードブロックは普通以下のように書きます。 その中にを書くときは  を使います。 ※この記事はマークダウンで書いているので更に  で囲っています。（コード elzup/anozonbiyori@a7d62e…</content:encoded></item><item><title><![CDATA[Firebase Functions の console.log をまとめる]]></title><description><![CDATA[Firebase Functions が Node 8 サポートを終了しログの仕様が少し変わりました。
 で Object を渡すと 1 行ずつにログが分割されてしまうようになりました。 Console.log calls result in multiple log…]]></description><link>https://blog.anozon.me//firebase-functions-log</link><guid isPermaLink="false">https://blog.anozon.me//firebase-functions-log</guid><pubDate>Thu, 02 Jul 2020 16:00:00 GMT</pubDate><content:encoded>Firebase Functions が Node 8 サポートを終了しログの仕様が少し変わりました。
 で Object を渡すと 1 行ずつにログが分割されてしまうようになりました。 Console.log calls result in multiple log…</content:encoded></item><item><title><![CDATA[テストで TimeZone を固定する]]></title><description><![CDATA[日時の文字列をテストに使っているとき GitHub Actions でつまずいたのでメモ。 javascript の Date は自動でローカルのタイムゾーンで文字列化されます。 環境変数 TZ を指定して実行する 他の解決策 unix timestamp…]]></description><link>https://blog.anozon.me//github-actions-timezone</link><guid isPermaLink="false">https://blog.anozon.me//github-actions-timezone</guid><pubDate>Wed, 01 Jul 2020 15:00:00 GMT</pubDate><content:encoded>日時の文字列をテストに使っているとき GitHub Actions でつまずいたのでメモ。 javascript の Date は自動でローカルのタイムゾーンで文字列化されます。 環境変数 TZ を指定して実行する 他の解決策 unix timestamp…</content:encoded></item><item><title><![CDATA[surround.vim 入門【vim中級者向け】]]></title><description><![CDATA[公式リポジトリ https://github.com/tpope/vim-surround why 周囲(クウォート, 括弧, タグ …)の操作が楽になる Vim plugin にデフォルトでついてることが多いのですぐ使える VSCodeVim(VSCode), IdeaVIM…]]></description><link>https://blog.anozon.me//surround-vim-tutorial</link><guid isPermaLink="false">https://blog.anozon.me//surround-vim-tutorial</guid><pubDate>Tue, 16 Jun 2020 21:00:00 GMT</pubDate><content:encoded>公式リポジトリ https://github.com/tpope/vim-surround why 周囲(クウォート, 括弧, タグ …)の操作が楽になる Vim plugin にデフォルトでついてることが多いのですぐ使える VSCodeVim(VSCode), IdeaVIM…</content:encoded></item><item><title><![CDATA[Docker 止めずに立ち上げるだけする【tty】]]></title><description><![CDATA[docker-compose.yml java 実行環境を立ち上げる例。 立ち上げた環境にシェルでアクセスする例。 Docker コマンドの場合 tty:  オプション]]></description><link>https://blog.anozon.me//docker-tty-tips</link><guid isPermaLink="false">https://blog.anozon.me//docker-tty-tips</guid><pubDate>Tue, 09 Jun 2020 14:00:00 GMT</pubDate><content:encoded>docker-compose.yml java 実行環境を立ち上げる例。 立ち上げた環境にシェルでアクセスする例。 Docker コマンドの場合 tty:  オプション</content:encoded></item><item><title><![CDATA[1つ上のディレクトリ名をとるShellコマンド]]></title><description><![CDATA[1 つ上のディレクトリ path をとる 現在のディレクトリ path をとる 2 ディレクトリをとる 補足  という部分は文字列置換が働いてます。 参考: bash の変数内文字列置換まとめ - Qiita おまけ: alias 化 推奨はしないよ！]]></description><link>https://blog.anozon.me//shell-parent-directory-name</link><guid isPermaLink="false">https://blog.anozon.me//shell-parent-directory-name</guid><pubDate>Wed, 27 May 2020 20:00:00 GMT</pubDate><content:encoded>1 つ上のディレクトリ path をとる 現在のディレクトリ path をとる 2 ディレクトリをとる 補足  という部分は文字列置換が働いてます。 参考: bash の変数内文字列置換まとめ - Qiita おまけ: alias 化 推奨はしないよ！</content:encoded></item><item><title><![CDATA[localhost.{appname}:3000 で開発してブラウザキャッシュを活用する案]]></title><description><![CDATA[複数のアプリを同じ  で開発すると切り替えるたびにキャッシュが競合するので  で変える案です。 /etc/hosts フロントエンド開発起動スクリプト例 CRA (Create React App) や Next.js の起動スクリプト例。(起動時に自動で開く URL…]]></description><link>https://blog.anozon.me//localhost-apphost-dev</link><guid isPermaLink="false">https://blog.anozon.me//localhost-apphost-dev</guid><pubDate>Tue, 26 May 2020 03:00:00 GMT</pubDate><content:encoded>複数のアプリを同じ  で開発すると切り替えるたびにキャッシュが競合するので  で変える案です。 /etc/hosts フロントエンド開発起動スクリプト例 CRA (Create React App) や Next.js の起動スクリプト例。(起動時に自動で開く URL…</content:encoded></item><item><title><![CDATA[React で canvas から画像生成する最小コード]]></title><description><![CDATA[この記事では React (と TypeScript で) canvas から画像生成する方法を紹介します。
文字描画や色変更をサンプルに説明していきます。 React で Canvas を使うベースのコード useEffect…]]></description><link>https://blog.anozon.me//react-canvas-to-img</link><guid isPermaLink="false">https://blog.anozon.me//react-canvas-to-img</guid><pubDate>Mon, 25 May 2020 10:00:00 GMT</pubDate><content:encoded>この記事では React (と TypeScript で) canvas から画像生成する方法を紹介します。
文字描画や色変更をサンプルに説明していきます。 React で Canvas を使うベースのコード useEffect…</content:encoded></item><item><title><![CDATA[Desktopのファイルを一掃する]]></title><description><![CDATA[や  ディレクトリはよく散らかるので、「散らかってきたな〜」と思ったとにバックアップに移動するコマンドをまとめます。 コマンド  のファイルを 日付つきディレクトリ(例 )に移動します。]]></description><link>https://blog.anozon.me//clearn-desktop-backup</link><guid isPermaLink="false">https://blog.anozon.me//clearn-desktop-backup</guid><pubDate>Tue, 12 May 2020 20:00:00 GMT</pubDate><content:encoded>や  ディレクトリはよく散らかるので、「散らかってきたな〜」と思ったとにバックアップに移動するコマンドをまとめます。 コマンド  のファイルを 日付つきディレクトリ(例 )に移動します。</content:encoded></item><item><title><![CDATA[.git/config からリモートリポジトリを変える]]></title><description><![CDATA[リモートリポジトリ先を変更(やリネーム)した際に .git/config から変える癖がついてしまったので整理もかねて。 git コマンドで URL を変える メリット 無効な設定をしてしまうリスクが少ない 1 コマンドで済む .git/config から メリット remote…]]></description><link>https://blog.anozon.me//git-config-edit</link><guid isPermaLink="false">https://blog.anozon.me//git-config-edit</guid><pubDate>Sun, 03 May 2020 17:00:00 GMT</pubDate><content:encoded>リモートリポジトリ先を変更(やリネーム)した際に .git/config から変える癖がついてしまったので整理もかねて。 git コマンドで URL を変える メリット 無効な設定をしてしまうリスクが少ない 1 コマンドで済む .git/config から メリット remote…</content:encoded></item><item><title><![CDATA[docker-compose.yml に環境変数を渡す]]></title><description><![CDATA[.env ファイルを使う サンプルコード: elzup-sandbox/docker-scratch docker-compose.yml services.shell.environment に環境変数をパスしたいとします。
変数  を  ファイルに記述します。 Docker…]]></description><link>https://blog.anozon.me//docker-compose-by-env</link><guid isPermaLink="false">https://blog.anozon.me//docker-compose-by-env</guid><pubDate>Fri, 01 May 2020 18:00:00 GMT</pubDate><content:encoded>.env ファイルを使う サンプルコード: elzup-sandbox/docker-scratch docker-compose.yml services.shell.environment に環境変数をパスしたいとします。
変数  を  ファイルに記述します。 Docker…</content:encoded></item><item><title><![CDATA[GitHub Pages から別のサイトに移行するときのリダイレクト設定]]></title><description><![CDATA[概要 GitHub Pages から別のホスティングへ移行したとき、
ドメインが変わる場合にすべき設定について。 運用していたページ  へのアクセスを 新しい URL へリダイレクトする必要があります。 gh-pages…]]></description><link>https://blog.anozon.me//gh-pages-redirect</link><guid isPermaLink="false">https://blog.anozon.me//gh-pages-redirect</guid><pubDate>Thu, 30 Apr 2020 23:00:00 GMT</pubDate><content:encoded>概要 GitHub Pages から別のホスティングへ移行したとき、
ドメインが変わる場合にすべき設定について。 運用していたページ  へのアクセスを 新しい URL へリダイレクトする必要があります。 gh-pages…</content:encoded></item><item><title><![CDATA[rel=noopenerをつけないサイトへの攻撃デモ]]></title><description><![CDATA[この記事では rel=noopener”をつけないとどんなことができるのかをデモで示します。 noopener の攻撃デモ リンク: https://tools.anozon.me/noopener noopener…]]></description><link>https://blog.anozon.me//danger-of-noopener</link><guid isPermaLink="false">https://blog.anozon.me//danger-of-noopener</guid><pubDate>Wed, 29 Apr 2020 21:00:00 GMT</pubDate><content:encoded>この記事では rel=noopener”をつけないとどんなことができるのかをデモで示します。 noopener の攻撃デモ リンク: https://tools.anozon.me/noopener noopener…</content:encoded></item><item><title><![CDATA[Excelやスプレッドシートで方眼紙を作る方法]]></title><description><![CDATA[この記事では Excel やスプレッドシートでの方眼紙の作り方 について紹介します。 Google SpreadSheet で作る cmd + A: 全選択。 A 列をダブルクリック(A 列解除+A 列再選択で行選択の解除) A…]]></description><link>https://blog.anozon.me//spreadsheet-graph-paper</link><guid isPermaLink="false">https://blog.anozon.me//spreadsheet-graph-paper</guid><pubDate>Wed, 29 Apr 2020 14:00:00 GMT</pubDate><content:encoded>この記事では Excel やスプレッドシートでの方眼紙の作り方 について紹介します。 Google SpreadSheet で作る cmd + A: 全選択。 A 列をダブルクリック(A 列解除+A 列再選択で行選択の解除) A…</content:encoded></item><item><title><![CDATA[Firebase Hosting の URL で .html を省略する設定]]></title><description><![CDATA[cleanUrls を使う ホスティング動作を構成する  |  Firebase  の hostings.cleanUrls を true にすることで実現できます。 拡張子なしの URL で にアクセスできます。
 →]]></description><link>https://blog.anozon.me//firebase-hosting-clean-url</link><guid isPermaLink="false">https://blog.anozon.me//firebase-hosting-clean-url</guid><pubDate>Sun, 26 Apr 2020 21:00:00 GMT</pubDate><content:encoded>cleanUrls を使う ホスティング動作を構成する  |  Firebase  の hostings.cleanUrls を true にすることで実現できます。 拡張子なしの URL で にアクセスできます。
 →</content:encoded></item><item><title><![CDATA[useSecounds という時計用 hooks を作った]]></title><description><![CDATA[という react-hooks ライブラリ を作りました。 elzup/use-seconds: Seconds interval time for ReactHooks DEMO - CodeSandbox useSecounds の特徴 長時間使用しても .00…]]></description><link>https://blog.anozon.me//maked-use-seconds</link><guid isPermaLink="false">https://blog.anozon.me//maked-use-seconds</guid><pubDate>Sun, 08 Mar 2020 18:00:00 GMT</pubDate><content:encoded>という react-hooks ライブラリ を作りました。 elzup/use-seconds: Seconds interval time for ReactHooks DEMO - CodeSandbox useSecounds の特徴 長時間使用しても .00…</content:encoded></item><item><title><![CDATA[gitリポジトリごとにデフォルトのコミットメッセージを設定する]]></title><description><![CDATA[git は  でデフォルトのコミットメッセージの設定できます。 例えばこのブログのリポジトリは、記事を書いたとき 📝  をコミットメッセージの先頭に入れています。  毎回入力するのは面倒なので  を使って省略してみます。 手順…]]></description><link>https://blog.anozon.me//git-commit-message-template</link><guid isPermaLink="false">https://blog.anozon.me//git-commit-message-template</guid><pubDate>Sat, 07 Mar 2020 12:00:00 GMT</pubDate><content:encoded>git は  でデフォルトのコミットメッセージの設定できます。 例えばこのブログのリポジトリは、記事を書いたとき   をコミットメッセージの先頭に入れています。  毎回入力するのは面倒なので  を使って省略してみます。 手順…</content:encoded></item><item><title><![CDATA[manifest.json から VSCode でプロジェクトごとに色をつける]]></title><description><![CDATA[プロジェクトごとに VSCode の色を変える方法を見つけて最近利用しています。
しかし毎回設定するのは面倒くさいので manifest.json からテーマカラーを読み出して
設定する cli を作りました。 vscode-workcolor-setup  や  の theme…]]></description><link>https://blog.anozon.me//vscode-project-color</link><guid isPermaLink="false">https://blog.anozon.me//vscode-project-color</guid><pubDate>Thu, 05 Mar 2020 11:00:00 GMT</pubDate><content:encoded>プロジェクトごとに VSCode の色を変える方法を見つけて最近利用しています。
しかし毎回設定するのは面倒くさいので manifest.json からテーマカラーを読み出して
設定する cli を作りました。 vscode-workcolor-setup  や  の theme…</content:encoded></item><item><title><![CDATA[javascript で Habitica API を使って日課の記録を取得する]]></title><description><![CDATA[この記事では Habitica API で日課の記録を取得する方法について紹介します。 Habitica は日課管理ツールです。 Habitica - Gamify Your Life token を取得する  node.js で API を叩く axios…]]></description><link>https://blog.anozon.me//habitica-api-sample</link><guid isPermaLink="false">https://blog.anozon.me//habitica-api-sample</guid><pubDate>Sun, 01 Mar 2020 15:00:00 GMT</pubDate><content:encoded>この記事では Habitica API で日課の記録を取得する方法について紹介します。 Habitica は日課管理ツールです。 Habitica - Gamify Your Life token を取得する  node.js で API を叩く axios…</content:encoded></item><item><title><![CDATA[【JavaScriptクワイン】プログラムと同じ文字列を出力するプログラム書いた]]></title><description><![CDATA[JavaScript で ソースコード自身を出力するソースコード書いてみました。Qunie…]]></description><link>https://blog.anozon.me//javascript-own-print</link><guid isPermaLink="false">https://blog.anozon.me//javascript-own-print</guid><pubDate>Wed, 26 Feb 2020 21:00:00 GMT</pubDate><content:encoded>JavaScript で ソースコード自身を出力するソースコード書いてみました。Qunie…</content:encoded></item><item><title><![CDATA[【JavaScript】時刻指定で setTimeout するスニペット]]></title><description><![CDATA[ダッシュボードなど開きっぱなしにする Web 画面で特定の時間にイベントを発火させる方法をまとめました。 特定の時刻に実行する 日付が変わったときに]]></description><link>https://blog.anozon.me//js-event-become-tomorrow</link><guid isPermaLink="false">https://blog.anozon.me//js-event-become-tomorrow</guid><pubDate>Tue, 25 Feb 2020 11:00:00 GMT</pubDate><content:encoded>ダッシュボードなど開きっぱなしにする Web 画面で特定の時間にイベントを発火させる方法をまとめました。 特定の時刻に実行する 日付が変わったときに</content:encoded></item><item><title><![CDATA[vim でディレクトリ内のファイルを一括リネームする]]></title><description><![CDATA[vimfiler の rename 機能が便利で、複数ファイルを自由自在にリネームできます。
Shougo/vimfiler.vim: Powerful file explorer implemented by Vim script やってみる before-rename…]]></description><link>https://blog.anozon.me//vimfilter-rename</link><guid isPermaLink="false">https://blog.anozon.me//vimfilter-rename</guid><pubDate>Wed, 19 Feb 2020 15:00:00 GMT</pubDate><content:encoded>vimfiler の rename 機能が便利で、複数ファイルを自由自在にリネームできます。
Shougo/vimfiler.vim: Powerful file explorer implemented by Vim script やってみる before-rename…</content:encoded></item><item><title><![CDATA[PID を使わずにアプリケーションを kill する方法]]></title><description><![CDATA[で PID を確認する方法は面倒です。また、 や  コマンドは間違ったプロセスを強制終了してしまうリスクがあります。
この記事ではオススメのアプリケーションを kill する方法をいくつか紹介します。 fkill CLI sindresorhus…]]></description><link>https://blog.anozon.me//kill-without-pid</link><guid isPermaLink="false">https://blog.anozon.me//kill-without-pid</guid><pubDate>Tue, 11 Feb 2020 10:00:00 GMT</pubDate><content:encoded>で PID を確認する方法は面倒です。また、 や  コマンドは間違ったプロセスを強制終了してしまうリスクがあります。
この記事ではオススメのアプリケーションを kill する方法をいくつか紹介します。 fkill CLI sindresorhus…</content:encoded></item><item><title><![CDATA[Next.js with TypeScript で最小限の _app.tsx, _document.tsx]]></title><description><![CDATA[この記事では Next.js with TypeScript で最小限の _app.tsx, _document.tsx について紹介します。 Gist: Next.js with typescript minimum pages/_document.tsx, pages…]]></description><link>https://blog.anozon.me//ts-nextjs-pages</link><guid isPermaLink="false">https://blog.anozon.me//ts-nextjs-pages</guid><pubDate>Sat, 08 Feb 2020 15:00:00 GMT</pubDate><content:encoded>この記事では Next.js with TypeScript で最小限の _app.tsx, _document.tsx について紹介します。 Gist: Next.js with typescript minimum pages/_document.tsx, pages…</content:encoded></item><item><title><![CDATA[Mac の launchctl 毎朝で読むページを自動で開かせる]]></title><description><![CDATA[毎朝チェックしたいページがあるのですが、毎日開くのは面倒です。
この記事では毎朝読むページを自動で開かせる方法について紹介します。 スクリプトを準備する コード: add morning newspaper · elzup/Brewfile@eb690e…]]></description><link>https://blog.anozon.me//launchctl-register</link><guid isPermaLink="false">https://blog.anozon.me//launchctl-register</guid><pubDate>Sat, 08 Feb 2020 13:00:00 GMT</pubDate><content:encoded>毎朝チェックしたいページがあるのですが、毎日開くのは面倒です。
この記事では毎朝読むページを自動で開かせる方法について紹介します。 スクリプトを準備する コード: add morning newspaper · elzup/Brewfile@eb690e…</content:encoded></item><item><title><![CDATA[children を持つ Component を normal function で書くときの型定義]]></title><description><![CDATA[この記事では children を持つ Component を function で書くときの型定義する方法を説明します。 書き方  を使うことで書けます。 Sample PropsWithChildren - CodeSandbox それぞれの書き方 関連 Tips Props…]]></description><link>https://blog.anozon.me//react-fc-with-function</link><guid isPermaLink="false">https://blog.anozon.me//react-fc-with-function</guid><pubDate>Fri, 07 Feb 2020 12:00:00 GMT</pubDate><content:encoded>この記事では children を持つ Component を function で書くときの型定義する方法を説明します。 書き方  を使うことで書けます。 Sample PropsWithChildren - CodeSandbox それぞれの書き方 関連 Tips Props…</content:encoded></item><item><title><![CDATA[【ボツネタ】GitHub Actions の URL 1 つからバッジを生成するツール作った]]></title><description><![CDATA[この記事では GitHub Actions の URL 1 つからバッジを生成するツールを作ったので紹介します。 するつもりだったのですが、気づいたら公式で発行するするボタンができてました。 github-actions-qawolf-badge.png…]]></description><link>https://blog.anozon.me//generate-gha-badge</link><guid isPermaLink="false">https://blog.anozon.me//generate-gha-badge</guid><pubDate>Mon, 03 Feb 2020 21:00:00 GMT</pubDate><content:encoded>この記事では GitHub Actions の URL 1 つからバッジを生成するツールを作ったので紹介します。 するつもりだったのですが、気づいたら公式で発行するするボタンができてました。 github-actions-qawolf-badge.png…</content:encoded></item><item><title><![CDATA[Mac OS でIPアドレスを出力する方法いろいろ]]></title><description><![CDATA[この記事ではプライベート IP アドレスだけ出力する方法をまとめました。 目次 ローカル IP ifconfig を使う internal-ip-cli (npm module) を使う sindresorhus/internal-ip-cli: Get your…]]></description><link>https://blog.anozon.me//print-local-ip</link><guid isPermaLink="false">https://blog.anozon.me//print-local-ip</guid><pubDate>Fri, 31 Jan 2020 14:00:00 GMT</pubDate><content:encoded>この記事ではプライベート IP アドレスだけ出力する方法をまとめました。 目次 ローカル IP ifconfig を使う internal-ip-cli (npm module) を使う sindresorhus/internal-ip-cli: Get your…</content:encoded></item><item><title><![CDATA[GatsbyJS のコードブロックに言語バッジをつける方法]]></title><description><![CDATA[この記事では GatsbyJS のコードブロックに言語バッジをつける方法について紹介します。 前提として  を使っています。 やり方を考えてるとき www.gatsbyjs.org/docs のコードブロックにも言語表示があったのと、このサイト自体も GatsbyJS…]]></description><link>https://blog.anozon.me//gatsby-codeblock-lang-badge</link><guid isPermaLink="false">https://blog.anozon.me//gatsby-codeblock-lang-badge</guid><pubDate>Wed, 22 Jan 2020 12:00:00 GMT</pubDate><content:encoded>この記事では GatsbyJS のコードブロックに言語バッジをつける方法について紹介します。 前提として  を使っています。 やり方を考えてるとき www.gatsbyjs.org/docs のコードブロックにも言語表示があったのと、このサイト自体も GatsbyJS…</content:encoded></item><item><title><![CDATA[【zsh】なくなったディレクトリを anyframe-widget-cdr から消す]]></title><description><![CDATA[この記事では cdr から不要なディレクトリを削除する方法を紹介します。 cdr は zsh に入っているコマンドで、過去に開いたディレクトリへ移動できるコマンドです。 普段は  をラップした anyframe…]]></description><link>https://blog.anozon.me//fix-cdr-cleanup</link><guid isPermaLink="false">https://blog.anozon.me//fix-cdr-cleanup</guid><pubDate>Tue, 21 Jan 2020 17:00:00 GMT</pubDate><content:encoded>この記事では cdr から不要なディレクトリを削除する方法を紹介します。 cdr は zsh に入っているコマンドで、過去に開いたディレクトリへ移動できるコマンドです。 普段は  をラップした anyframe…</content:encoded></item><item><title><![CDATA[zstyle で現在の値を取得する]]></title><description><![CDATA[この記事では zstyle で現在の値を取得する について紹介します。 zstyle コマンドのマニュアル zsh: 22 Zsh Modules 方法 1. -g オプションを使う。 方法…]]></description><link>https://blog.anozon.me//zstyle-get-current-value</link><guid isPermaLink="false">https://blog.anozon.me//zstyle-get-current-value</guid><pubDate>Tue, 21 Jan 2020 16:00:00 GMT</pubDate><content:encoded>この記事では zstyle で現在の値を取得する について紹介します。 zstyle コマンドのマニュアル zsh: 22 Zsh Modules 方法 1. -g オプションを使う。 方法…</content:encoded></item><item><title><![CDATA[【Clasp】GoogleAppScript のコードをローカルで開発する]]></title><description><![CDATA[この記事では Clasp を使って GoogleAppScript のコードを手元で管理する方法を紹介します。 Clasp Command Line Interface using clasp | Google Developers 手順…]]></description><link>https://blog.anozon.me//clasp-init-feels</link><guid isPermaLink="false">https://blog.anozon.me//clasp-init-feels</guid><pubDate>Tue, 21 Jan 2020 14:00:00 GMT</pubDate><content:encoded>この記事では Clasp を使って GoogleAppScript のコードを手元で管理する方法を紹介します。 Clasp Command Line Interface using clasp | Google Developers 手順…</content:encoded></item><item><title><![CDATA[5層 ReactComponent と TypeScript でカウンター書いてみる]]></title><description><![CDATA[経年劣化に耐える ReactComponent の書き方 - Qiita
が良さそうだったので TypeScript で書く場合を試してみた。 コード CodeSandbox 気になる部分 StyledComponent で既存 Component を Wrap…]]></description><link>https://blog.anozon.me//layer-react-counterapp</link><guid isPermaLink="false">https://blog.anozon.me//layer-react-counterapp</guid><pubDate>Tue, 21 Jan 2020 11:00:00 GMT</pubDate><content:encoded>経年劣化に耐える ReactComponent の書き方 - Qiita
が良さそうだったので TypeScript で書く場合を試してみた。 コード CodeSandbox 気になる部分 StyledComponent で既存 Component を Wrap…</content:encoded></item><item><title><![CDATA[【PLOP CLI】新しいファイルをテンプレートから生成するCLI]]></title><description><![CDATA[この記事では PLOP について紹介します。
GatsbyJS で書いている当ブログの記事作成を例に話します。 Consistency Made Simple : PLOP 手順 1. インストール npm で global…]]></description><link>https://blog.anozon.me//gatsby-plop-newpost</link><guid isPermaLink="false">https://blog.anozon.me//gatsby-plop-newpost</guid><pubDate>Sun, 12 Jan 2020 00:00:00 GMT</pubDate><content:encoded>この記事では PLOP について紹介します。
GatsbyJS で書いている当ブログの記事作成を例に話します。 Consistency Made Simple : PLOP 手順 1. インストール npm で global…</content:encoded></item><item><title><![CDATA[GatsbyJS を Typescript に移行した際の Type 付け]]></title><description><![CDATA[GatsbyJS で書いているこのブログを Typescript 移行しました。 主に以下の記事を参考に移行しました。なので今回は Type づけに焦点を当てて書きます。 Gatsby.js を完全 TypeScript 化する - Qiita GraphQL Data…]]></description><link>https://blog.anozon.me//gatsby-to-typescript</link><guid isPermaLink="false">https://blog.anozon.me//gatsby-to-typescript</guid><pubDate>Thu, 09 Jan 2020 11:12:20 GMT</pubDate><content:encoded>GatsbyJS で書いているこのブログを Typescript 移行しました。 主に以下の記事を参考に移行しました。なので今回は Type づけに焦点を当てて書きます。 Gatsby.js を完全 TypeScript 化する - Qiita GraphQL Data…</content:encoded></item><item><title><![CDATA[Firebase Function 内から Cloud Messaging で通知を投げる最小コード]]></title><description><![CDATA[Firebase Function から Cloud Messaging (FCM HTTP v1 API) を使って通知を送る方法のメモです。  の初期化設定する アプリサーバーからの送信リクエストを作成する  |  Firebase…]]></description><link>https://blog.anozon.me//firebase-messaging-by-function</link><guid isPermaLink="false">https://blog.anozon.me//firebase-messaging-by-function</guid><pubDate>Wed, 08 Jan 2020 23:03:38 GMT</pubDate><content:encoded>Firebase Function から Cloud Messaging (FCM HTTP v1 API) を使って通知を送る方法のメモです。  の初期化設定する アプリサーバーからの送信リクエストを作成する  |  Firebase…</content:encoded></item><item><title><![CDATA[GatsbyJSでコードブロックを作成する]]></title><description><![CDATA[この記事では GatsbyJS で作っているブログのコードブロックをカスタマイズします。
現状 Plain Text なので Syntax Hilight と style 調整をします。 手順 1. prismjs のプラグインを追加 gatsby-remark-prismjs…]]></description><link>https://blog.anozon.me//gatsby-codebrock</link><guid isPermaLink="false">https://blog.anozon.me//gatsby-codebrock</guid><pubDate>Sun, 05 Jan 2020 23:03:38 GMT</pubDate><content:encoded>この記事では GatsbyJS で作っているブログのコードブロックをカスタマイズします。
現状 Plain Text なので Syntax Hilight と style 調整をします。 手順 1. prismjs のプラグインを追加 gatsby-remark-prismjs…</content:encoded></item><item><title><![CDATA[GatsbyJSで記事のURLをカスタマイズする]]></title><description><![CDATA[この記事では GatsbyJS で作るブログの slug(URL のパス部分) のカスタマイズ方法を紹介します。 gatsby-source-filesystem を使用している前提で説明します(gatsby-starter-blog に入っています)。 手順. /gatsby…]]></description><link>https://blog.anozon.me//gatsby-customize-slug</link><guid isPermaLink="false">https://blog.anozon.me//gatsby-customize-slug</guid><pubDate>Sat, 04 Jan 2020 23:03:38 GMT</pubDate><content:encoded>この記事では GatsbyJS で作るブログの slug(URL のパス部分) のカスタマイズ方法を紹介します。 gatsby-source-filesystem を使用している前提で説明します(gatsby-starter-blog に入っています)。 手順. /gatsby…</content:encoded></item><item><title><![CDATA[はやくもブログを Hexo から Gatsby に切り替えた]]></title><description><![CDATA[移行した理由 React 使えそうなので Gatsby に移行しました。 Before
 After
 さっぱりしてしまいましたがカスタマイズ前なので OK。 いじっていきたい部分 Gatsby は GraphQL…]]></description><link>https://blog.anozon.me//move-to-gatsby-blog</link><guid isPermaLink="false">https://blog.anozon.me//move-to-gatsby-blog</guid><pubDate>Wed, 06 Mar 2019 11:58:50 GMT</pubDate><content:encoded>移行した理由 React 使えそうなので Gatsby に移行しました。 Before
 After
 さっぱりしてしまいましたがカスタマイズ前なので OK。 いじっていきたい部分 Gatsby は GraphQL…</content:encoded></item><item><title><![CDATA[akispace.fm をはじめました]]></title><description><![CDATA[podcast 始めました エンジニア 2 人でアウトプットしながら雑談したいと思いはじめました。 yattecast を fork Podcast には audrio と RSS が必要なになります。
yattecast というリポジトリが podcast 向けの Jekyll…]]></description><link>https://blog.anozon.me//building-radio</link><guid isPermaLink="false">https://blog.anozon.me//building-radio</guid><pubDate>Mon, 04 Mar 2019 11:28:00 GMT</pubDate><content:encoded>podcast 始めました エンジニア 2 人でアウトプットしながら雑談したいと思いはじめました。 yattecast を fork Podcast には audrio と RSS が必要なになります。
yattecast というリポジトリが podcast 向けの Jekyll…</content:encoded></item><item><title><![CDATA[Hexo と gh-pages でブログを作った]]></title><description><![CDATA[Hello world!. 新しくブログを立てました。 今までの使っていたブログと理由 最初はブログを作るということで WordPress を VPS サーバーに設置していました。 でも自分で管理するのがだるくなって、しばらく”はてなブログ”や Qiita, Medium…]]></description><link>https://blog.anozon.me//start-anozon-blog</link><guid isPermaLink="false">https://blog.anozon.me//start-anozon-blog</guid><pubDate>Sat, 09 Feb 2019 19:10:20 GMT</pubDate><content:encoded>Hello world!. 新しくブログを立てました。 今までの使っていたブログと理由 最初はブログを作るということで WordPress を VPS サーバーに設置していました。 でも自分で管理するのがだるくなって、しばらく”はてなブログ”や Qiita, Medium…</content:encoded></item></channel></rss>