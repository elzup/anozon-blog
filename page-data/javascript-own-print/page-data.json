{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/javascript-own-print","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon","siteUrl":"https://blog.anozon.me"}},"markdownRemark":{"id":"22b3e398-2250-5984-a0be-36334cb1a74c","excerpt":"JavaScript で ソースコード自身を出力するソースコード書いてみました。Qunie…","html":"<p>JavaScript で ソースコード自身を出力するソースコード書いてみました。Qunie(クワイン)と言うそうです。</p>\n<p><code class=\"language-text\">fs.readFile</code> は使いません。</p>\n<p>面白そうだと思った人は以降を見ずに挑戦してみてください。</p>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#%E6%88%90%E6%9E%9C%E3%82%B3%E3%83%BC%E3%83%89\">成果コード</a></li>\n<li><a href=\"#%E8%A7%A3%E8%AA%AC\">解説</a></li>\n<li><a href=\"#%E5%8B%95%E7%94%BB\">動画</a></li>\n<li><a href=\"#%E6%9C%80%E5%B0%8F%E3%82%B3%E3%83%BC%E3%83%89\">最小コード</a></li>\n</ul>\n</div>\n<h2 id=\"成果コード\" style=\"position:relative;\">成果コード</h2>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> quote <span class=\"token operator\">=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token number\">96</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">unzip</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">str</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> str <span class=\"token operator\">+</span> <span class=\"token string\">'console.log(unzip('</span> <span class=\"token operator\">+</span> quote <span class=\"token operator\">+</span> str <span class=\"token operator\">+</span> quote <span class=\"token operator\">+</span> <span class=\"token string\">'))'</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">unzip</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\nconst quote = String.fromCharCode(96)\nconst unzip = str => {\n  return str + 'console.log(unzip(' + quote + str + quote + '))'\n}\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<!-- prettier-ignore-end -->\n<h2 id=\"解説\" style=\"position:relative;\">解説</h2>\n<p>動作を追うと若干頭がグワングワンしますが、意外とシンプルです。</p>\n<p><img src=\"https://elzup-image-storage.s3.amazonaws.com/blog/code-own-print.png\"></p>\n<p>まず赤枠二箇所は全く同じコードです。上の関数で全体を出力します。</p>\n<p>青枠がそれ以外の部分を出力する部分です。</p>\n<p>紫が最後にバッククォート自身を下のヒアドキュメント内部に直接書き込んでしまうと構文エラーになるので\n上の関数で <strong>バッククォート</strong>を使わずにバッククォートを出力するように工夫しています。</p>\n<p>最終的に\n赤、青、紫、赤、紫、青と全体を出力できました。</p>\n<h2 id=\"動画\" style=\"position:relative;\">動画</h2>\n<p>挑戦してたときの実況動画。</p>\n<p><a href=\"https://www.youtube.com/watch?v=_FD4l394JHc&#x26;t=468s\">https://www.youtube.com/watch?v=_FD4l394JHc&#x26;t=468s</a></p>\n<h2 id=\"最小コード\" style=\"position:relative;\">最小コード</h2>\n<p>同じ方法で最小限にすると以下の一行になります。</p>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">q <span class=\"token operator\">=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token function-variable function\">m</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">s</span> <span class=\"token operator\">=></span> s <span class=\"token operator\">+</span> <span class=\"token string\">';console.log(m('</span> <span class=\"token operator\">+</span> q <span class=\"token operator\">+</span> s <span class=\"token operator\">+</span> q <span class=\"token operator\">+</span> <span class=\"token string\">'))'</span><span class=\"token punctuation\">;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">m</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"q = String.fromCharCode(34);m = s => s + ';console.log(m(' + q + s + q + '))'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>別例。</p>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">m</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">s</span> <span class=\"token operator\">=></span> s <span class=\"token operator\">+</span> <span class=\"token string\">';console.log(m('</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> s <span class=\"token operator\">+</span> q <span class=\"token operator\">+</span> <span class=\"token string\">'))'</span><span class=\"token punctuation\">;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">m</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m = s => s + ';console.log(m(' + (q = String.fromCharCode(34)) + s + q + '))'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<!-- prettier-ignore-end -->","frontmatter":{"title":"【JavaScriptクワイン】プログラムと同じ文字列を出力するプログラム書いた","date":"2020-02-26","tags":["JavaScript","CodingChallange"]}}},"pageContext":{"slug":"javascript-own-print","previous":{"excerpt":"ダッシュボードなど開きっぱなしにする Web 画面で特定の時間にイベントを発火させる方法をまとめました。 特定の時刻に実行する 日付が変わったときに 特定の時刻に実行する 日付が変わったときに","fields":{"slug":"js-event-become-tomorrow"},"frontmatter":{"title":"【JavaScript】時刻指定で setTimeout するスニペット"}},"next":{"excerpt":"この記事では Habitica API で日課の記録を取得する方法について紹介します。 Habitica は日課管理ツールです。 Habitica - Gamify Your Life token を取得する node.js で API…","fields":{"slug":"habitica-api-sample"},"frontmatter":{"title":"javascript で Habitica API を使って日課の記録を取得する"}}}},"staticQueryHashes":["1855083372","3070792728","4156694545"]}