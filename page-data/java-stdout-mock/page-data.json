{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/java-stdout-mock","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon","siteUrl":"https://blog.anozon.me"}},"markdownRemark":{"id":"1b05b2e5-eac9-5dd3-8bef-ad7b5713f98b","excerpt":"以前書いた、\njava で標準出力を一旦オフにする | あのぞんブログ から発展して出力の受け取り方です。 Repl.it - StdOutToStr コード","html":"<p>以前書いた、\n<a href=\"https://blog.anozon.me/java-stdout-null\">java で標準出力を一旦オフにする | あのぞんブログ</a></p>\n<p>から発展して出力の受け取り方です。</p>\n<p><a href=\"https://repl.it/@anozon/StdOutToStr\">Repl.it - StdOutToStr</a></p>\n<h2 id=\"コード\">コード</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">PrintStream</span> stdout <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ByteArrayOutputStream</span> bos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">PrintStream</span> ps <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintStream</span><span class=\"token punctuation\">(</span>bos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"before System.setOut(ps)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">setOut</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no print\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no print\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">setOut</span><span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"after System.setOut(stdout)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"print\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"print\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bos.toString()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bos<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">before System.setOut<span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">)</span>\nafter System.setOut<span class=\"token punctuation\">(</span>stdout<span class=\"token punctuation\">)</span>\nprint\nprint\nbos.toString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nno print\nno print</code></pre></div>","frontmatter":{"title":"java で標準出力を文字列として取得する","date":"2020-11-20","tags":["java"]}}},"pageContext":{"slug":"java-stdout-mock","previous":{"excerpt":"を実行した時のタイムスタンプをレンダリングしたいときの方法です。 jsx 上で  などとするとクライアントサイドでレンダリングされた時間が表示されてしまいます。 SSR 時のデータを React で使いたい場合は NextPage…","fields":{"slug":"next-initial-props-timestmap"},"frontmatter":{"title":"Next.js export 実行時のタイムスタンプをコンポーネントで使う"}},"next":{"excerpt":"js で配列の 2 行目以降のみをソートする方法のメモです。 repl: https://repl.it/@anozon/sortbody#index.ts ソート対象の配列 先頭以外をソートする n 行目以降のみソートする Lodash…","fields":{"slug":"sort-without-head"},"frontmatter":{"title":"js で先頭以外(n行目以降)をソートする"}}}},"staticQueryHashes":["1855083372","2529228376","3070792728"]}