{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/next-initial-props-timestmap","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon","siteUrl":"https://blog.anozon.me"}},"markdownRemark":{"id":"4fa26af7-4e84-57b4-889d-eaa04f4302c3","excerpt":"を実行した時のタイムスタンプをレンダリングしたいときの方法です。 jsx 上で  などとするとクライアントサイドでレンダリングされた時間が表示されてしまいます。 SSR 時のデータを React で使いたい場合は NextPage コンポーネント で  を使うと渡すことが出来ます。\n( 直下で export…","html":"<p><code class=\"language-text\">next export</code> を実行した時のタイムスタンプをレンダリングしたいときの方法です。<br>\njsx 上で <code class=\"language-text\">&lt;span&gt;{new Date()}&lt;/span&gt;</code> などとするとクライアントサイドでレンダリングされた時間が表示されてしまいます。</p>\n<p>SSR 時のデータを React で使いたい場合は NextPage コンポーネント で <code class=\"language-text\">Component.getInitialProps</code> を使うと渡すことが出来ます。\n(<code class=\"language-text\">/pages</code> 直下で export するコンポーネント)</p>\n<h2 id=\"コード\">コード</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">InitialProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> buildTime<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> IndexPage<span class=\"token operator\">:</span> NextPage<span class=\"token operator\">&lt;</span>InitialProps<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> buildTime <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">ビルド日時: </span><span class=\"token punctuation\">{</span>buildTime<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n\nIndexPage<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getInitialProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> buildTime<span class=\"token operator\">:</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> IndexPage</code></pre></div>\n<h2 id=\"usecontext-経由で使う場合\">useContext 経由で使う場合</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> TimeContext <span class=\"token operator\">=</span> <span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">InitialProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> buildTime<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> IndexPage<span class=\"token operator\">:</span> NextPage<span class=\"token operator\">&lt;</span>InitialProps<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> buildTime <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>buildTime<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Index</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TimeContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n\nIndexPage<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getInitialProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> buildTime<span class=\"token operator\">:</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> IndexPage</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Footer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> timeStr <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>TimeContext<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">ビルド日時: </span><span class=\"token punctuation\">{</span>timeStr<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Next.js export 実行時のタイムスタンプをコンポーネントで使う","date":"2020-11-17","tags":["Next.js","TypeScript","SSR"]}}},"pageContext":{"slug":"next-initial-props-timestmap","previous":{"excerpt":"java で標準出力を一時的にオフにする方法です。 Repl.it - StdOutToNull コード  で “デフォルトの出力” と “何もしない OutputStream” を切り替えています。 snippet Snippet 部分のみコード。","fields":{"slug":"java-stdout-null"},"frontmatter":{"title":"java で標準出力を一旦オフにする"}},"next":{"excerpt":"以前書いた、\njava で標準出力を一旦オフにする | あのぞんブログ から発展して出力の受け取り方です。 Repl.it - StdOutToStr コード","fields":{"slug":"java-stdout-mock"},"frontmatter":{"title":"java で標準出力を文字列として取得する"}}}},"staticQueryHashes":["1855083372","2529228376","3070792728"]}