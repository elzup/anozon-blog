{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/generate-gha-badge","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon","siteUrl":"https://blog.anozon.me"}},"markdownRemark":{"id":"49d945e5-ca48-5c22-9db0-1f10ac23488d","excerpt":"この記事では GitHub Actions の URL 1 つからバッジを生成するツールを作ったので紹介します。 するつもりだったのですが、気づいたら公式で発行するするボタンができてました。 github-actions-qawolf-badge.png…","html":"<p>この記事では GitHub Actions の URL 1 つからバッジを生成するツールを作ったので紹介します。</p>\n<p><strong>するつもりだったのですが、気づいたら公式で発行するするボタンができてました。</strong></p>\n<p><img src=\"https://elzup-image-storage.s3.amazonaws.com/blog/github-actions-qawolf-badge.png\" alt=\"github-actions-qawolf-badge.png\"></p>\n<p>なので、「作っちゃったもの」の技術解説をします。</p>\n<h2 id=\"バッジの仕様\">バッジの仕様</h2>\n<p><a href=\"https://help.github.com/ja/actions/automating-your-workflow-with-github-actions/configuring-a-workflow#adding-a-workflow-status-badge-to-your-repository\">ワークフローを設定する - GitHub ヘルプ</a> (公式ドキュメント)</p>\n<p>URL の形式。\n<code class=\"language-text\">https://github.com/&lt;OWNER&gt;/&lt;REPOSITORY&gt;/workflows/&lt;WORKFLOW_FILE_PATH&gt;/badge.svg</code></p>\n<h2 id=\"成果物\">成果物</h2>\n<p><img src=\"https://elzup-image-storage.s3.amazonaws.com/blog/gha-badge-maker.gif\" alt=\"gha-badge-maker.gif\"></p>\n<p>コード: <a href=\"https://github.com/elzup/tools/blob/master/pages/gha-badge-maker.tsx\">tools/gha-badge-maker.tsx at master · elzup/tools</a></p>\n<p>以下は変換する関数部分です。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">convertUrlToBadge</span><span class=\"token punctuation\">(</span>url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ParseResult <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> parseReg <span class=\"token operator\">=</span> <span class=\"token string\">'(https://github.com/.*/.*)/actions\\\\?query=workflow%3A(.*)'</span>\n  <span class=\"token keyword\">const</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span>parseReg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>m<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">,</span> repoUrl<span class=\"token punctuation\">,</span> actionPath<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> m\n  <span class=\"token keyword\">const</span> actionName <span class=\"token operator\">=</span> action <span class=\"token operator\">||</span> actionPath\n  <span class=\"token keyword\">const</span> badgeUrl <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>repoUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/workflows/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>actionName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/badge.svg</span><span class=\"token template-punctuation string\">`</span></span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> actionName<span class=\"token punctuation\">,</span> badgeUrl<span class=\"token punctuation\">,</span> badgeText<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">![</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>actionName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">](</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>badgeUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// test</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'convertUrlToBadge'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://github.com/elzup/tools/actions?query=workflow%3Aqawolf'</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">convertUrlToBadge</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    badgeText<span class=\"token operator\">:</span>\n      <span class=\"token string\">'![qawolf](https://github.com/elzup/tools/workflows/qawolf/badge.svg)'</span><span class=\"token punctuation\">,</span>\n    actionName<span class=\"token operator\">:</span> <span class=\"token string\">'qawolf'</span><span class=\"token punctuation\">,</span>\n    badgeUrl<span class=\"token operator\">:</span> <span class=\"token string\">'https://github.com/elzup/tools/workflows/qawolf/badge.svg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"まとめ\">まとめ</h2>\n<p>もちろん既存ツールがないかは調べていたのですが、いつの間にか公式にできてることに書いている途中で気づきました。</p>\n<p>毎回どんな URL だっけ？となっていたし需要はあったですね。</p>","frontmatter":{"title":"【ボツネタ】GitHub Actions の URL 1 つからバッジを生成するツール作った","date":"2020-02-03","tags":["React","GtiHub Actions","作った"]}}},"pageContext":{"slug":"generate-gha-badge","previous":{"excerpt":"この記事ではプライベート IP アドレスだけ出力する方法をまとめました。 目次 ローカル IP ifconfig を使う internal-ip-cli (npm module) を使う Public IP internal-ip-cli (npm module…","fields":{"slug":"print-local-ip"},"frontmatter":{"title":"Mac OS でIPアドレスを出力する方法いろいろ"}},"next":{"excerpt":"この記事では children を持つ Component を function で書くときの型定義する方法を説明します。 書き方  を使うことで書けます。 Sample PropsWithChildren - CodeSandbox それぞれの書き方 関連 Tips Props…","fields":{"slug":"react-fc-with-function"},"frontmatter":{"title":"children を持つ Component を normal function で書くときの型定義"}}}},"staticQueryHashes":["1855083372","2529228376","3070792728"]}