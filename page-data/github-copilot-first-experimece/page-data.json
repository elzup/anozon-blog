{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/github-copilot-first-experimece","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon","siteUrl":"https://blog.anozon.me"}},"markdownRemark":{"id":"fb3dbafa-ba76-5594-b468-6f646164b231","excerpt":"主に TypeScript を書いています。 初日から結構好感です。 良さげな点 コメント書かなくてもよく効く エディタの Undo 壊す問題がなさそう (vim) 候補から選べる サジェスト表示 UI の偉大さ 変数名からの type 予測が効く ググらなくなった ツールとして使う Randam…","html":"<p>主に TypeScript を書いています。 初日から結構好感です。</p>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#%E8%89%AF%E3%81%95%E3%81%92%E3%81%AA%E7%82%B9\">良さげな点</a></p>\n<ul>\n<li><a href=\"#%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E6%9B%B8%E3%81%8B%E3%81%AA%E3%81%8F%E3%81%A6%E3%82%82%E3%82%88%E3%81%8F%E5%8A%B9%E3%81%8F\">コメント書かなくてもよく効く</a></li>\n<li><a href=\"#%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF%E3%81%AE-undo-%E5%A3%8A%E3%81%99%E5%95%8F%E9%A1%8C%E3%81%8C%E3%81%AA%E3%81%95%E3%81%9D%E3%81%86-vim\">エディタの Undo 壊す問題がなさそう (vim)</a></li>\n<li><a href=\"#%E5%80%99%E8%A3%9C%E3%81%8B%E3%82%89%E9%81%B8%E3%81%B9%E3%82%8B\">候補から選べる</a></li>\n<li><a href=\"#%E3%82%B5%E3%82%B8%E3%82%A7%E3%82%B9%E3%83%88%E8%A1%A8%E7%A4%BA-ui-%E3%81%AE%E5%81%89%E5%A4%A7%E3%81%95\">サジェスト表示 UI の偉大さ</a></li>\n<li><a href=\"#%E5%A4%89%E6%95%B0%E5%90%8D%E3%81%8B%E3%82%89%E3%81%AE-type-%E4%BA%88%E6%B8%AC%E3%81%8C%E5%8A%B9%E3%81%8F\">変数名からの type 予測が効く</a></li>\n<li><a href=\"#%E3%82%B0%E3%82%B0%E3%82%89%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F\">ググらなくなった</a></li>\n<li><a href=\"#%E3%83%84%E3%83%BC%E3%83%AB%E3%81%A8%E3%81%97%E3%81%A6%E4%BD%BF%E3%81%86\">ツールとして使う</a></li>\n<li><a href=\"#randam-%E8%A6%81%E7%B4%A0\">Randam 要素</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%83%93%E3%83%93%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%93%E3%82%8D\">ビビったところ</a></p>\n<ul>\n<li><a href=\"#%E6%97%A2%E5%AD%98%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B\">既存コードを使ってくれる</a></li>\n<li><a href=\"#%E6%96%87%E7%AB%A0%E3%81%A8%E3%81%8B%E3%82%82%E7%B5%90%E6%A7%8B%E4%BA%88%E6%B8%AC%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%82%82\">文章とかも結構予測してくれる(日本語も)</a></li>\n<li><a href=\"#%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E5%87%BA%E5%8A%9B%E3%81%AB%E3%82%81%E3%81%A3%E3%81%BD%E3%81%86%E5%BC%B7%E3%81%84\">デバッグ出力にめっぽう強い</a></li>\n<li><a href=\"#%E3%81%9F%E3%81%BE%E3%81%AB%E6%9B%B8%E3%81%93%E3%81%86%E3%81%A8%E3%81%97%E3%81%A6%E3%81%9F%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E3%82%A8%E3%82%B9%E3%83%91%E3%83%BC%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8B\">たまに書こうとしてたコードをエスパーしてくる</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E6%80%AA%E3%81%97%E3%81%84%E3%81%A8%E3%81%93%E3%82%8D\">怪しいところ</a></p>\n<ul>\n<li><a href=\"#1-%E8%A1%8C%E3%81%9A%E3%81%A4%E3%81%97%E3%81%8B%E5%87%BA%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%81%AA%E3%81%84%E6%99%82%E3%81%8C%E3%81%82%E3%82%8B%E3%80%82\">1 行ずつしか出してくれない時がある。</a></li>\n<li><a href=\"#%E6%AD%A3%E3%81%97%E3%81%84%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AA%E3%81%AE%E3%81%8B%E3%81%A9%E3%81%86%E3%81%8B%E5%95%8F%E9%A1%8C\">正しいコードなのかどうか問題</a></li>\n<li><a href=\"#%E6%B0%97%E3%81%8C%E6%95%A3%E3%82%8B%E5%8F%AF%E8%83%BD%E6%80%A7%E3%82%82%E3%81%82%E3%82%8B%E5%95%8F%E9%A1%8C\">気が散る可能性もある問題</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#discussion-githubcopilot-preview\">Discussion github/copilot-preview</a></p>\n<ul>\n<li><a href=\"#%E3%83%AA%E3%82%B9%E3%83%88%E3%82%A2%E3%83%83%E3%83%97\">リストアップ</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"良さげな点\">良さげな点</h2>\n<h3 id=\"コメント書かなくてもよく効く\">コメント書かなくてもよく効く</h3>\n<p>関数名だけとか, 関数の途中からでもサジェストしてくれる。</p>\n<h3 id=\"エディタの-undo-壊す問題がなさそう-vim\">エディタの Undo 壊す問題がなさそう (vim)</h3>\n<p>心配があった部分だけど undo redo は問題なく動いている。</p>\n<h3 id=\"候補から選べる\">候補から選べる</h3>\n<p>サジェスト候補は 1 つでなく複数から選べる。</p>\n<h3 id=\"サジェスト表示-ui-の偉大さ\">サジェスト表示 UI の偉大さ</h3>\n<p>カーソル下に候補リストが出る UI よりも 単純にサジェスト表示されている状態から確定する UI は体験がよい。\n(透過文字で入力後の位置に文字が表示される <code class=\"language-text\">zsh-autosuggestion</code> みたいなやつ。)</p>\n<h3 id=\"変数名からの-type-予測が効く\">変数名からの type 予測が効く</h3>\n<p>string, integer, boolean あたりの予測がだいぶ正確で助かる。</p>\n<h3 id=\"ググらなくなった\">ググらなくなった</h3>\n<p><strong>エディタでググれるようになった。</strong></p>\n<p>「array shuffle」 ってどうやるんだっけとか、「array flatten 関数作りたいな」とか、\nChrome を開いて Google に問い合わせていた。が、</p>\n<p>今は 3 行以下の関数は手元の 4 次元ポケットから取り出せるようになった。</p>\n<h3 id=\"ツールとして使う\">ツールとして使う</h3>\n<p>作ったばかりのエンコード文字列もなんのエンコードフォーマットなのかとか当ててきた。</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">GitHub copilot <a href=\"https://t.co/qXVXiw5ZPA\">pic.twitter.com/qXVXiw5ZPA</a></p>&mdash; あのぞん🌏.tsx (@anozon) <a href=\"https://twitter.com/anozon/status/1415270080615632896?ref_src=twsrc%5Etfw\">July 14, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h3 id=\"randam-要素\">Randam 要素</h3>\n<p>コードとか文章とか URL とかを気まぐれにガチャできる。息抜きに雑学を得れたりして良さそう。</p>\n<h2 id=\"ビビったところ\">ビビったところ</h2>\n<h3 id=\"既存コードを使ってくれる\">既存コードを使ってくれる</h3>\n<p><code class=\"language-text\">round</code> とか定義したあとの関数で <code class=\"language-text\">round4</code> 関数を活用したコードを生成してきたのは驚いた。\n<img src=\"https://elzup-image-storage.s3.amazonaws.com/blog/copilot_reuse.png\" alt=\"copilot_reuse\"></p>\n<p>ちなみに数字 4 の部分は 10000 とか 1324 とかテキトーな数値でもちゃんと動く。</p>\n<p>React でも既存コンポーネント使ってサジェストしてくる。</p>\n<h3 id=\"文章とかも結構予測してくれる日本語も\">文章とかも結構予測してくれる(日本語も)</h3>\n<p>この記事もマークダウンで書いているがサジェストされている。<br>\nただ構文は正確だが流石に期待通りに動かない。\n<img src=\"https://elzup-image-storage.s3.amazonaws.com/blog/copilot_japanese.png\" alt=\"copilot_japanese\"></p>\n<p>英単語の補完が効いたり良さそう。実際スペルが曖昧な場合に頼れる。</p>\n<p><img src=\"https://elzup-image-storage.s3.amazonaws.com/blog/copilot_be_careful.png\"></p>\n<h3 id=\"デバッグ出力にめっぽう強い\">デバッグ出力にめっぽう強い</h3>\n<p>log → Tab(snippet 展開) → 出力変数補完みたいなことやっていたけど、</p>\n<p>なぜか俺がデバッグ出力したいことを察して <code class=\"language-text\">console.log({ val })</code> と表示してくれる。<br>\nそして Tab キーを押すだけですむ。</p>\n<h3 id=\"たまに書こうとしてたコードをエスパーしてくる\">たまに書こうとしてたコードをエスパーしてくる</h3>\n<p>たまにだけど。どうやってわかったの！？って suggestion 出してくるときは流石に驚かされる。</p>\n<p>React の items ループ部分書こうかなってときに、まだ何も書いてないのに <code class=\"language-text\">{items.map(() =&gt; ())}</code> を出してくれたり、</p>\n<p><img src=\"https://elzup-image-storage.s3.amazonaws.com/blog/copilot_filter.png\"></p>\n<p>気が利くアシスタントだ。脳のリソース消費が少し減らせそう。</p>\n<p>(直前に書いたコードもサジェスト要素に加わっている？)</p>\n<h2 id=\"怪しいところ\">怪しいところ</h2>\n<p><strong>まだわからないけど</strong></p>\n<h3 id=\"1-行ずつしか出してくれない時がある。\">1 行ずつしか出してくれない時がある。</h3>\n<p>複数行コードサジェストしてくれたり、1 行ずつしか表示せずタブ何度も押す必要があったりちょっと謎。</p>\n<h3 id=\"正しいコードなのかどうか問題\">正しいコードなのかどうか問題</h3>\n<p>Stack Overflow とかブログのコード見つけたときと同じ、\nTest の書いてない、評価が不明なコードを引っ張ってくるときと同じになる。</p>\n<p>QuickSort とか calcPi とかサジェストしてみても、動作が怪しいコードや意図と違うコードとってきてしまった。</p>\n<h3 id=\"気が散る可能性もある問題\">気が散る可能性もある問題</h3>\n<p>入力する気のないときもカーソルがある場所に補完持って来てしまう。\nコード補完と競合する。\nDiscussions でも議論されている。</p>\n<h2 id=\"discussion-githubcopilot-preview\">Discussion github/copilot-preview</h2>\n<p><a href=\"https://github.com/github/copilot-preview/discussions\">Discussions · github/copilot-preview</a>\nではネタや議論が毎日交換されている。</p>\n<ul>\n<li>ライセンスや secrets の漏洩問題など</li>\n<li>未サポート環境・言語のリクエスト</li>\n<li><code class=\"language-text\">ME:</code> <code class=\"language-text\">AI:</code> で Chat ができる</li>\n<li>AI bot でもよくある QA ネタをコードで</li>\n</ul>\n<p>など。</p>\n<p>サジェストはコードブロックで共有できないので、皆スクショなのがちょっと面白い。</p>\n<h3 id=\"リストアップ\">リストアップ</h3>\n<p>なにかを列挙してもらう使い方はやってみてもサジェストが弱かった。<br>\n正確だとしても使いたくなる場面は少なさそう。</p>\n<h1 id=\"まとめ\">まとめ</h1>\n<p>意図的に使う場面 → ググりたくなるようなタイミング。<br>\n無意識に使う場面 → エスパーコード生成。</p>\n<p>進化系スニペットの要素が強そう。</p>\n<p>Copilot はその瞬間だけ見れるものなので、ゲームでスクショや録画するときみたいに、記念写真スクショを取るという新しい習慣が生まれた。</p>\n<p>今後の発展にも大いに期待できる。</p>","frontmatter":{"title":"GitHub Copilot 触ってみて1ヶ月なので所感","date":"2021-08-04","tags":["GitHub Copilot","review"]}}},"pageContext":{"slug":"github-copilot-first-experimece","previous":{"excerpt":"順列を扱うための情報をまとめました。 4 パターン表 名前 英語 記号 A,B から 2 つ 順列 Permutation nPr  重複順列 Peramutation with replacement nΠr  組合わせ Combination nCr…","fields":{"slug":"permutation-programming"},"frontmatter":{"title":"組み合わせ・順列プログラミングそれぞれまとめ nPr nCr nHr nΠr"}},"next":null}},"staticQueryHashes":["1855083372","2529228376","3070792728"]}