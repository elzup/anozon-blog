{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/gatsby-customize-slug","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon"}},"markdownRemark":{"id":"9cb08f98-307d-5072-9c3a-a3170fd9094c","excerpt":"この記事では GatsbyJS で作るブログの slug(URL のパス部分) のカスタマイズ方法を紹介します。 gatsby-source-filesystem を使用している前提で説明します(gatsby-starter-blog に入っています)。 手順. /gatsby-node.js を編集する slug…","html":"<p>この記事では GatsbyJS で作るブログの <strong>slug(URL のパス部分)</strong> のカスタマイズ方法を紹介します。</p>\n<p><a href=\"https://www.gatsbyjs.org/packages/gatsby-source-filesystem/\">gatsby-source-filesystem</a> を使用している前提で説明します(gatsby-starter-blog に入っています)。</p>\n<h2>手順. /gatsby-node.js を編集する</h2>\n<p>slug は <code class=\"language-text\">/gatsby-node.js</code> の onCreateNode 内の createNodeField で設定しています。以下のコードでは createFilePath で作成されるパスがそのまま設定されています。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>gatsby-node.js</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> actions<span class=\"token punctuation\">,</span> getNode <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token function\">createFilePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> getNode <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">slug</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    node<span class=\"token punctuation\">,</span>\n    value<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>createFilePath で返されるパスは <code class=\"language-text\">gatsby-source-filesystem</code> の path オプションをルートとした絶対パスとなっています。<strong>ファイルの拡張子はついていません</strong>。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>gatsby-config.js</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-filesystem</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        path<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/content/blog</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        name<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">blog</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h2>実装例</h2>\n<p>今回このブログを例にカスタマイズします。</p>\n<p>僕のブログではブログポストのファイルは以下のディレクトリに配置しています。</p>\n<p><code class=\"language-text\">/content/blog/2020/2020-01-04___gatsby-customize-slug.md</code></p>\n<p>(<code class=\"language-text\">/content/blog/{year}/{year}-{month}-{day}___{slug}.md</code>)</p>\n<p>URL は以下のようになっています。</p>\n<p><code class=\"language-text\">https://blog.anozon.me/2020/2020-01-04_gatsby-customize-slug</code></p>\n<p>この日付入り URL を、記事の ID に当たる部分のみに省略してシンプルにします。</p>\n<p><code class=\"language-text\">https://blog.anozon.me/gatsby-customize-slug</code></p>\n<p><a href=\"https://github.com/elzup/anozonbiyori/commit/34505a0a39640ea0b2a1b60c7662412544179510#diff-fda05457e393bada716f508859bfc604\">実装 Commit</a></p>\n<p>変更点</p>\n<ul>\n<li>\n<p>SLUG_SEPARATOR によって slug 部分をチュシュツして返す getSlug 関数の作成</p>\n<ul>\n<li>SLUG_SEPARATOR を含まない場合はそのまま</li>\n</ul>\n</li>\n<li>getSlug を適用して返す</li>\n</ul>\n\n        <div class=\"gatsby-code-title\">\n          <span>gatsby-node.js</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">SLUG_SEPARATOR</span> <span class=\"token operator\">=</span> <span class=\"token string\">'___'</span>\n\n<span class=\"token comment\">// '2020/2020-01-04___gatsby-customize-slug' → 'gatsby-customize-slug'</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getSlug</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">path</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>prefix<span class=\"token punctuation\">,</span> slug<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SLUG_SEPARATOR</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> slug <span class=\"token operator\">||</span> path\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>type <span class=\"token operator\">!==</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">MarkdownRemark</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createNodeField <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\n<span class=\"token keyword\">const</span> filePath <span class=\"token operator\">=</span> <span class=\"token function\">createFilePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> getNode<span class=\"token punctuation\">,</span> trailingSlash<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> slug <span class=\"token operator\">=</span> <span class=\"token function\">getSlug</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">slug</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  node<span class=\"token punctuation\">,</span>\n  value<span class=\"token operator\">:</span> slug<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://elzup-image-storage.s3-ap-northeast-1.amazonaws.com/blog/gatsby-custom-slug.png\" alt=\"https://elzup-image-storage.s3-ap-northeast-1.amazonaws.com/blog/gatsby-custom-slug.png\"></p>\n<p>カスタマイズできました。</p>","frontmatter":{"title":"GatsbyJSで記事のURLをカスタマイズする","date":"2020-01-04 23:03:38","tags":["GatsbyJS"]}}},"pageContext":{"slug":"gatsby-customize-slug","previous":{"excerpt":"移行した理由 React が使えるのが良さそうなので Gatsby に移行しました。 Before\n After\n さっぱりしてしまいましたがカスタマイズ前なので OK。 いじっていきたい部分 Gatsby は GraphQL…","fields":{"slug":"gatsby-blog"},"frontmatter":{"title":"はやくもブログを Hexo から Gatsby に切り替えた"}},"next":{"excerpt":"この記事では GatsbyJS で作っているブログのコードブロックをカスタマイズします。\n現状 Plain Text なので Syntax Hilight と style 調整をします。 手順 1. prismjs のプラグインを追加 gatsby-remark-prismjs…","fields":{"slug":"gatsby-codebrock"},"frontmatter":{"title":"GatsbyJSでコードブロックを作成する"}}}}}