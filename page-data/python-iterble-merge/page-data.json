{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/python-iterble-merge","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon","siteUrl":"https://blog.anozon.me"}},"markdownRemark":{"id":"59666356-4aec-5a38-8a01-82508cf4dcfc","excerpt":"巨大なソート済み csv ファイルをソートしながらマージする事があったので。\n2 つの Iterable な list をロジカルにループする方法を残しておきます。 コード 1 Repl.it - yield-merge-loop…","html":"<p>巨大なソート済み csv ファイルをソートしながらマージする事があったので。\n2 つの Iterable な list をロジカルにループする方法を残しておきます。</p>\n<h2 id=\"コード-1\" style=\"position:relative;\">コード 1</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">merge_iter</span><span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">,</span> f2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    row1 <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span>\n    row2 <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>f2<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> row1 <span class=\"token keyword\">and</span> row2<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> row2 <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">or</span> row1 <span class=\"token operator\">&lt;</span> row2<span class=\"token punctuation\">:</span> <span class=\"token comment\"># どちらを先にするか条件</span>\n            <span class=\"token keyword\">yield</span> row1\n            row1 <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">yield</span> row2\n            row2 <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>f2<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n\narr2 <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narr1 <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> merge_iter<span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># => 1</span>\n<span class=\"token comment\"># => 2</span>\n<span class=\"token comment\"># => 3</span>\n<span class=\"token comment\"># => ...</span>\n<span class=\"token comment\"># => 9</span></code></pre></div>\n<p><a href=\"https://repl.it/@anozon/yield-merge-loop#main.py\">Repl.it - yield-merge-loop</a></p>\n<p><code class=\"language-text\">next(iter)</code> はなかった場合に例外を投げます。\n第２引数で例外の代わりに返す値を指定できます。</p>\n<h2 id=\"コード-2\" style=\"position:relative;\">コード 2</h2>\n<p>汎用的な例です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">merge_iter</span><span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">,</span> f2<span class=\"token punctuation\">,</span> getter<span class=\"token punctuation\">,</span> compare<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    row1 <span class=\"token operator\">=</span> getter<span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span>\n    row2 <span class=\"token operator\">=</span> getter<span class=\"token punctuation\">(</span>f2<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> row1 <span class=\"token keyword\">and</span> row2<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> row2 <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">or</span> compare<span class=\"token punctuation\">(</span>row1<span class=\"token punctuation\">,</span> row2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">yield</span> row1\n            row1 <span class=\"token operator\">=</span> getter<span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">yield</span> row2\n            row2 <span class=\"token operator\">=</span> getter<span class=\"token punctuation\">(</span>f2<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sort_merge_iter</span><span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">,</span> f2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    next_or_none <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> li<span class=\"token punctuation\">:</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n    sort_comp <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> a <span class=\"token operator\">&lt;</span> b\n    <span class=\"token keyword\">return</span> merge_iter<span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">,</span> f2<span class=\"token punctuation\">,</span> next_or_none<span class=\"token punctuation\">,</span> sort_comp<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"追記-コード-3\" style=\"position:relative;\">追記: コード 3</h2>\n<p><code class=\"language-text\">heapq</code> を使っても出来ました。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import heapq\nheapq.merge(f1, f2)</code></pre></div>","frontmatter":{"title":"Python で 2つの Iterable をマージしてループする","date":"2020-08-11","tags":["Python"]}}},"pageContext":{"slug":"python-iterble-merge","previous":{"excerpt":"日本語設定で Google 検索を使ってると「日本語のページのみ表示する」というオプションがでてくることがあります。 でも逆に英語のページのみヒットさせたいときもあるので手順を紹介します。(意味合いが違う日本語記事ばかりヒットするときがある) 方法 Private Window…","fields":{"slug":"google-search-without-japanese"},"frontmatter":{"title":"Google検索で英語のページのみヒットさせる方法"}},"next":{"excerpt":"Python スクリプトでリアルタイムにログが出力されないときの対処法。 -u オプションで起動する -u オプション | 1. コマンドラインと環境 — Python 3.8.5 ドキュメント 端末以外からの実行だとバッファして stdout…","fields":{"slug":"python-buffer-print"},"frontmatter":{"title":"Python で Systemd や nohup を使っていてログがリアルタイムに出力されないとき"}}}}}