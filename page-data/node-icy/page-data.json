{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/node-icy","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon","siteUrl":"https://blog.anozon.me"}},"markdownRemark":{"id":"ba26835b-e642-5e31-99ba-6e5e277924e7","excerpt":"この記事では node.js で Streaming の メタデータを取得する方法について紹介します。  を使用します。 TooTallNate/node-icy: Node.js module for parsing and/or injecting ICY metadata コード 文字 encoding…","html":"<p>この記事では node.js で Streaming の メタデータを取得する方法について紹介します。</p>\n<p><code class=\"language-text\">node-icy</code> を使用します。</p>\n<p><a href=\"https://github.com/TooTallNate/node-icy\">TooTallNate/node-icy: Node.js module for parsing and/or injecting ICY metadata</a></p>\n<h2 id=\"コード\">コード</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> icy <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'icy'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> iconv <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'iconv-lite'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sjisToUtf8</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> iconv<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token string\">'SJIS'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span>\n\nicy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// HTTP response headers</span>\n  <span class=\"token comment\">// console.log(res.headers)</span>\n\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'metadata'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">metadata</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> parsed <span class=\"token operator\">=</span> icy<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token function\">sjisToUtf8</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>parsed<span class=\"token punctuation\">.</span>StreamTitle<span class=\"token punctuation\">)</span> <span class=\"token comment\">// タイトル</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 何度も取得する場合</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>文字 encoding がある場合は <code class=\"language-text\">icy.parse()</code> 前に decode します。</p>\n<h3 id=\"関数版\">関数版</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">,</span> onEnd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  icy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'metadata'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">metadata</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> parsed <span class=\"token operator\">=</span> icy<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token function\">sjisToUtf8</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>parsed<span class=\"token punctuation\">.</span>StreamTitle<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> onEnd<span class=\"token punctuation\">)</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'http://hoge.mp4'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">title</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title: '</span> <span class=\"token operator\">+</span> title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"node.js で Streaming の メタデータを取得する","date":"2021-01-12","tags":["Node.js","icy","Streaming"]}}},"pageContext":{"slug":"node-icy","previous":{"excerpt":"Raspberry Pi に Node.js 入れる方法のメモです。 tj/n: Node version management を使います。 .profile の設定 インストール作業","fields":{"slug":"raspberry-pi-node-setup"},"frontmatter":{"title":"Raspberry Pi に Node.js セットアップ"}},"next":{"excerpt":"vim で mouse を off にする iTerm2 の設定","fields":{"slug":"ssh-vim-copy"},"frontmatter":{"title":"ssh 接続先の vim でマウスの選択範囲をコピーする"}}}},"staticQueryHashes":["1855083372","2529228376","3070792728"]}