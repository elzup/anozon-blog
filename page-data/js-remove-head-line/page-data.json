{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/js-remove-head-line","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon","siteUrl":"https://blog.anozon.me"}},"markdownRemark":{"id":"6aacf10a-7d7a-5b71-ad95-523e5cbf89fe","excerpt":"コード 1  を使う方法です。 コード 2 コード 1 でいいですが最初に思いついた正規表現で削る方法です。\n動作が早いかわからないですが (渡される n が行数より大きいときに使えません。)\n遅かったです。Repl.it - regex-vs-slice","html":"<h2 id=\"コード-1\">コード 1</h2>\n<p><code class=\"language-text\">Array#slice</code> を使う方法です。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">removeHeads</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">removeHeads</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">removeHeads</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 'line2\\nline3\\nline4'</span>\n<span class=\"token function\">removeHeads</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 'line3\\nline4'</span>\n<span class=\"token function\">removeHeads</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 'line4'</span>\n<span class=\"token function\">removeHeads</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ''</span>\n<span class=\"token function\">removeHeads</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ''</span></code></pre></div>\n<h2 id=\"コード-2\">コード 2</h2>\n<p>コード 1 でいいですが最初に思いついた正規表現で削る方法です。\n<del>動作が早いかわからないですが</del> <strong>(渡される n が行数より大きいときに使えません。)</strong>\n遅かったです。<a href=\"https://repl.it/@anozon/regex-vs-slice#index.js\">Repl.it - regex-vs-slice</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">removeHeads</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".*\\n\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"js で文字列の先頭のn 行を削除する","date":"2020-10-05","tags":["JavaScript"]}}},"pageContext":{"slug":"js-remove-head-line","previous":{"excerpt":"アプリ 絵文字対応 カウントする関数 エスケープ文字の可視化 アプリ 文字頻度カウント(絵文字対応)\nemoji-count 絵文字対応  では絵文字が 1 文字として分割できません。  を使います。 bestiejs/punycode.js: A robust Punycode…","fields":{"slug":"emoji-moji-count"},"frontmatter":{"title":"絵文字を含めて文字数カウントするWebアプリ作った"}},"next":null}},"staticQueryHashes":["1855083372","3070792728","4156694545"]}