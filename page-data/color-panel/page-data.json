{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/color-panel","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon","siteUrl":"https://blog.anozon.me"}},"markdownRemark":{"id":"050ae47f-630d-5d19-8336-b8416d7581db","excerpt":"たまにモニターの焼け付きが気になって、グレイ色の背景のウィンドウを用意して確認することがあります。 そんなときに単色のページ探すがだるいので Web ツール化しました。\n真っ黒や真っ白なウィンドウも作ることができます。 ツール Mitelop という自分が作ってたツール群のサイトに置きました。 Widget…","html":"<p>たまにモニターの焼け付きが気になって、グレイ色の背景のウィンドウを用意して確認することがあります。<br>\nそんなときに単色のページ探すがだるいので Web ツール化しました。\n真っ黒や真っ白なウィンドウも作ることができます。</p>\n<h2 id=\"ツール\">ツール</h2>\n<p>Mitelop という自分が作ってたツール群のサイトに置きました。<br>\n<a href=\"https://mitelop.anozon.me/\">Widget makeing tool | Mitelop</a></p>\n<p><img src=\"https://elzup-image-storage.s3.amazonaws.com/blog/mitelop-color.png\" alt=\"Mitelop カラーパネル作成\">\n<img src=\"https://elzup-image-storage.s3.amazonaws.com/blog/mitelop-color-window.png\" alt=\"Mitelop ポップアップ画像\"></p>\n<p>PWA で Mitelop をインストールして作成すると上のようなウィンドウを作れます。</p>\n<h2 id=\"技術的な話\">技術的な話</h2>\n<p>単色背景については誰でもできるそのまんまの実装です。<br>\n作成画面のカラーピッカーは <a href=\"https://casesandberg.github.io/react-color/\">React Color</a> というコンポーネントを使っています。</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> Head <span class=\"token keyword\">from</span> <span class=\"token string\">'next/head'</span>\n\n<span class=\"token keyword\">const</span> ColorPage<span class=\"token operator\">:</span> <span class=\"token function-variable function\">NextPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 省略</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Color<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">reset</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Head</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>theme-color<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>color<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Color-</span><span class=\"token punctuation\">{</span>color<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Head</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ClockPage</code></pre></div>\n<p><code class=\"language-text\">&lt;meta name=&quot;theme-color&quot; /&gt;</code> を指定することで PWA ウィンドウヘッダーの色を変えられます。\nNext.js で実装しているアプリなので、<code class=\"language-text\">next/head</code> を使うことで動的に変更しています。</p>\n<p>GitHub <a href=\"https://github.com/elzup/mitelop\">elzup/mitelop: Widget makeing tool</a></p>","frontmatter":{"title":"単色パネル表示するだけのツール作った","date":"2021-02-19","tags":["作った","PWA"]}}},"pageContext":{"slug":"color-panel","previous":{"excerpt":"コード マンデルブロ集合をズームしてくサンプル  図の外側四角 () と選択点()と拡大率から 内側の四角()を求める関数です。 コード マンデルブロ集合をズームしてくサンプル コード tools/mandelbulb.tsx at master · elzup/tools…","fields":{"slug":"js-zoom-func"},"frontmatter":{"title":"【JavaScript】ズームしたときの座標を求める関数"}},"next":{"excerpt":"css animation の  や  などのキーワードに対して  のエラーが出たので対処しました。  で animation を扱う場合以下のように書きます。 () この  や  に VS Code…","fields":{"slug":"keyframes-ts-styled-plugin"},"frontmatter":{"title":"styled-components の keyframes で ts-styled-plugin のエラーが出る"}}}},"staticQueryHashes":["1855083372","2529228376","3070792728"]}