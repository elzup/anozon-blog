{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/docker-compose-by-env","result":{"data":{"site":{"siteMetadata":{"title":"あのぞんブログ","author":"anozon","siteUrl":"https://blog.anozon.me"}},"markdownRemark":{"id":"6c85c488-201f-52d3-81c4-bef6aa4b00e3","excerpt":".env ファイルを使う docker-compose.yml .env ファイルを使う サンプルコード: elzup-sandbox/docker-scratch docker-compose.yml services.shell.environment…","html":"<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#env-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%BF%E3%81%86\">.env ファイルを使う</a></p>\n<ul>\n<li><a href=\"#docker-composeyml\">docker-compose.yml</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"env-ファイルを使う\" style=\"position:relative;\">.env ファイルを使う</h2>\n<p>サンプルコード: <a href=\"https://github.com/elzup-sandbox/docker-scratch\">elzup-sandbox/docker-scratch</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose.yml\nshell/\n  Dockerfile</code></pre></div>\n<h3 id=\"docker-composeyml\" style=\"position:relative;\">docker-compose.yml</h3>\n<p>services.shell.environment に環境変数をパスしたいとします。\n変数 <code class=\"language-text\">TOP_TOKEN</code> を <code class=\"language-text\">.env</code> ファイルに記述します。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>docker-compose.yml</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3'</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n<span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span>\n<span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> ./shell\n<span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span> ./shell<span class=\"token punctuation\">:</span>/src\n<span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> shell\n<span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span> <span class=\"token string\">'TOKEN=\\${TOP_TOKEN}'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\".env\"><pre class=\"language-.env\"><code class=\"language-.env\">TOP_TOKEN=&#39;Hello I am env variable!&#39;</code></pre></div>\n<p>Docker の実行では環境変数をそのまま <code class=\"language-text\">echo</code> してみます。</p>\n<div class=\"gatsby-highlight\" data-language=\"title=dockerfile\"><pre class=\"language-title=dockerfile\"><code class=\"language-title=dockerfile\">FROM debian:stretch-slim\n\nCMD echo $TOKEN</code></pre></div>\n<p>この状態で <code class=\"language-text\">docker-compose up</code> すると設定した値が渡っているのがわかります。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">shell_1  | &#39;Hello I am env variable!&#39;</code></pre></div>","frontmatter":{"title":"docker-compose.yml に環境変数を渡す","date":"2020-05-01","tags":["Docker Compose","Docker"]}}},"pageContext":{"slug":"docker-compose-by-env","previous":{"excerpt":"概要 gh-pages ブランチをクリーンにする jekyll でリダイレクトする 概要 GitHub Pages から別のホスティングへ移行したとき、\nドメインが変わる場合にすべき設定について。 運用していたページ  へのアクセスを 新しい URL…","fields":{"slug":"gh-pages-redirect"},"frontmatter":{"title":"GitHub Pages から別のサイトに移行するときのリダイレクト設定"}},"next":{"excerpt":"リモートリポジトリ先を変更(やリネーム)した際に .git/config から変える癖がついてしまったので整理もかねて。 git コマンドで URL を変える メリット 無効な設定をしてしまうリスクが少ない 1 コマンドで済む .git/config から メリット remote…","fields":{"slug":"git-config-edit"},"frontmatter":{"title":".git/config からリモートリポジトリを変える"}}}}}