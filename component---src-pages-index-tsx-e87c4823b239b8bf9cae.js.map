{"version":3,"sources":["webpack:///./src/components/ArticleCard.tsx","webpack:///./src/pages/index.tsx"],"names":["Style","styled","div","rhythm","ArticalCard","title","tags","slug","date","excerpt","style","boxShadow","to","dangerouslySetInnerHTML","__html","TagChip","map","value","BlogIndex","data","location","site","siteMetadata","edges","posts","Layout","keywords","Bio","node","frontmatter","fields","key","pageQuery"],"mappings":"sMA8BA,IAAMA,EAAQC,IAAOC,IAAV,yEAAGD,CAAH,2BAEUE,YAAO,MAIbC,EAtBf,YAAkE,IAA3CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,QAC9C,OACE,gBAACT,EAAD,KACE,0BACE,gBAAC,OAAD,CAAMU,MAAO,CAAEC,UAAW,QAAUC,GAAE,IAAML,GACzCF,IAGL,6BAAQG,GACR,qBAAGK,wBAAyB,CAAEC,OAAQL,KAEtC,gBAACM,EAAA,EAAD,CAAUT,KAAMA,EAAKU,KAAI,SAAAC,GAAK,MAAK,CAAEA,gBCzB3C,0CA2CeC,UA7Bf,YAA8C,IAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SACjBf,EAAUc,EAAKE,KAAKC,aAApBjB,MACAkB,EAAUJ,EAAKK,MAAfD,MAER,OACE,gBAACE,EAAA,EAAD,CAAQL,SAAUA,EAAUf,MAAOA,GACjC,gBAAC,IAAD,CACEA,MAAM,YACNqB,SAAU,CAAC,OAAD,iCAEZ,gBAACC,EAAA,EAAD,MACCJ,EAAMP,KAAI,YAAc,IAAXY,EAAW,EAAXA,KACNvB,EAAQuB,EAAKC,YAAYxB,OAASuB,EAAKE,OAAOvB,KAEpD,OACE,gBAAC,EAAD,CACEwB,IAAKH,EAAKE,OAAOvB,KACjBF,MAAOA,EACPE,KAAMqB,EAAKE,OAAOvB,KAClBE,QAASmB,EAAKnB,QACdD,KAAMoB,EAAKC,YAAYrB,KACvBF,KAAMsB,EAAKC,YAAYvB,YAQpBY,IAEFc,EAAY","file":"component---src-pages-index-tsx-e87c4823b239b8bf9cae.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { rhythm } from '../utils/typography'\nimport { TagChips } from './TagChip'\n\ntype Props = {\n  tags: string[]\n  slug: string\n  title: string\n  date: string\n  excerpt: string\n}\n\nfunction ArticalCard({ title, tags, slug, date, excerpt }: Props) {\n  return (\n    <Style>\n      <h3>\n        <Link style={{ boxShadow: `none` }} to={`/${slug}`}>\n          {title}\n        </Link>\n      </h3>\n      <small>{date}</small>\n      <p dangerouslySetInnerHTML={{ __html: excerpt }} />\n\n      <TagChips tags={tags.map(value => ({ value }))} />\n    </Style>\n  )\n}\n\nconst Style = styled.div`\n  h3 {\n    margin-bottom: ${rhythm(1 / 4)};\n  }\n`\n\nexport default ArticalCard\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\nimport { IndexPageQuery } from '../../types/graphql-types.d'\nimport ArticalCard from '../components/ArticleCard'\n\ntype Props = {\n  data: IndexPageQuery\n  location: Location\n}\n\nfunction BlogIndex({ data, location }: Props) {\n  const { title } = data.site.siteMetadata\n  const { edges } = data.posts\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO\n        title=\"All posts\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      <Bio />\n      {edges.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n\n        return (\n          <ArticalCard\n            key={node.fields.slug}\n            title={title}\n            slug={node.fields.slug}\n            excerpt={node.excerpt}\n            date={node.frontmatter.date}\n            tags={node.frontmatter.tags}\n          />\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    posts: allMarkdownRemark(\n      filter: { frontmatter: { status: { ne: \"draft\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}