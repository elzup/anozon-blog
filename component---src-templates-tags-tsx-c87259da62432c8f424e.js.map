{"version":3,"sources":["webpack:///./src/templates/tags.tsx"],"names":["TagPageTemplate","props","data","pages","siteTitle","site","siteMetadata","title","tag","pageContext","location","description","edges","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"mappings":"2FAAA,iHAiDeA,UA/Bf,SAAyBC,GAAc,MACbA,EAAMC,KAAtBC,EAD6B,EAC7BA,MACFC,EAF+B,EACtBC,KACQC,aAAaC,MAC5BC,EAAQP,EAAMQ,YAAdD,IAER,OACE,gBAAC,IAAD,CAAQE,SAAUT,EAAMS,SAAUH,MAAOH,GACvC,gBAAC,IAAD,CAAKG,MAAUC,EAAL,MAAcJ,EAAaO,YAAgBH,EAAL,UAChD,0BAAKA,GACJL,EAAMS,MAAMC,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACZP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAEpD,OACE,uBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,sBACEE,MAAO,CACLC,aAAcC,YAAO,OAGvB,gBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,GAAE,IAAMT,EAAKE,OAAOC,MACrDV,IAGL,qBAAGiB,wBAAyB,CAAEC,OAAQX,EAAKY,iBAUhD,IAAMC,EAAY","file":"component---src-templates-tags-tsx-c87259da62432c8f424e.js","sourcesContent":["import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\nimport { rhythm } from '../utils/typography'\nimport {\n  SitePageContext,\n  TagSearchQuery,\n  TagSearchQueryVariables,\n} from '../../types/graphql-types.d'\n\ntype Props = {\n  location: Location\n  data: TagSearchQuery\n  pageContext: SitePageContext & TagSearchQueryVariables\n}\n\nfunction TagPageTemplate(props: Props) {\n  const { pages, site } = props.data\n  const siteTitle = site.siteMetadata.title\n  const { tag } = props.pageContext\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO title={`${tag} - ${siteTitle}`} description={`${tag}の記事一覧`} />\n      <h1>{tag}</h1>\n      {pages.edges.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n\n        return (\n          <div key={node.fields.slug}>\n            <h3\n              style={{\n                marginBottom: rhythm(1 / 4),\n              }}\n            >\n              <Link style={{ boxShadow: `none` }} to={`/${node.fields.slug}`}>\n                {title}\n              </Link>\n            </h3>\n            <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n          </div>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query TagSearch($tag: String) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    pages: allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, status: { ne: \"draft\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}